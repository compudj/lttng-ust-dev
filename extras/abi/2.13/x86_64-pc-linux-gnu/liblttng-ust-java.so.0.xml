<abi-corpus architecture='elf-amd-x86_64' soname='liblttng-ust-java.so.0'>
  <elf-needed>
    <dependency name='libc.so.6'/>
    <dependency name='ld-linux-x86-64.so.2'/>
    <dependency name='liblttng-ust.so.1'/>
    <dependency name='liblttng-ust-tracepoint.so.1'/>
    <dependency name='liblttng-ust-common.so.1'/>
    <dependency name='librt.so.1'/>
    <dependency name='libdl.so.2'/>
    <dependency name='libnuma.so.1'/>
    <dependency name='libpthread.so.0'/>
  </elf-needed>
  <elf-function-symbols>
    <!-- Java_org_lttng_ust_LTTngUst_tracepointInt -->
    <elf-symbol name='Java_org_lttng_ust_LTTngUst_tracepointInt' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- Java_org_lttng_ust_LTTngUst_tracepointIntInt -->
    <elf-symbol name='Java_org_lttng_ust_LTTngUst_tracepointIntInt' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- Java_org_lttng_ust_LTTngUst_tracepointLong -->
    <elf-symbol name='Java_org_lttng_ust_LTTngUst_tracepointLong' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- Java_org_lttng_ust_LTTngUst_tracepointLongLong -->
    <elf-symbol name='Java_org_lttng_ust_LTTngUst_tracepointLongLong' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- Java_org_lttng_ust_LTTngUst_tracepointString -->
    <elf-symbol name='Java_org_lttng_ust_LTTngUst_tracepointString' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
  </elf-function-symbols>
  <abi-instr version='1.0' address-size='64' path='LTTngUst.c' comp-dir-path='src/lib/lttng-ust-java' language='LANG_C99'>
    <!-- char -->
    <type-decl name='char' size-in-bits='8' id='type-id-1'/>
    <!-- struct __va_list_tag -->
    <class-decl name='__va_list_tag' size-in-bits='192' is-struct='yes' visibility='default' id='type-id-2'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int __va_list_tag::gp_offset -->
        <var-decl name='gp_offset' type-id='type-id-3' visibility='default'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- unsigned int __va_list_tag::fp_offset -->
        <var-decl name='fp_offset' type-id='type-id-3' visibility='default'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- void* __va_list_tag::overflow_arg_area -->
        <var-decl name='overflow_arg_area' type-id='type-id-4' visibility='default'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- void* __va_list_tag::reg_save_area -->
        <var-decl name='reg_save_area' type-id='type-id-4' visibility='default'/>
      </data-member>
    </class-decl>
    <!-- struct _jfieldID -->
    <class-decl name='_jfieldID' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-5'/>
    <!-- struct _jmethodID -->
    <class-decl name='_jmethodID' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-6'/>
    <!-- struct _jobject -->
    <class-decl name='_jobject' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-7'/>
    <!-- double -->
    <type-decl name='double' size-in-bits='64' id='type-id-8'/>
    <!-- float -->
    <type-decl name='float' size-in-bits='32' id='type-id-9'/>
    <!-- int -->
    <type-decl name='int' size-in-bits='32' id='type-id-10'/>
    <!-- long int -->
    <type-decl name='long int' size-in-bits='64' id='type-id-11'/>
    <!-- short int -->
    <type-decl name='short int' size-in-bits='16' id='type-id-12'/>
    <!-- signed char -->
    <type-decl name='signed char' size-in-bits='8' id='type-id-13'/>
    <!-- unnamed&#45;enum&#45;underlying&#45;type -->
    <type-decl name='unnamed-enum-underlying-type' is-anonymous='yes' size-in-bits='32' alignment-in-bits='32' id='type-id-14'/>
    <!-- unsigned char -->
    <type-decl name='unsigned char' size-in-bits='8' id='type-id-15'/>
    <!-- unsigned int -->
    <type-decl name='unsigned int' size-in-bits='32' id='type-id-3'/>
    <!-- unsigned long int -->
    <type-decl name='unsigned long int' size-in-bits='64' id='type-id-16'/>
    <!-- unsigned short int -->
    <type-decl name='unsigned short int' size-in-bits='16' id='type-id-17'/>
    <!-- void -->
    <type-decl name='void' id='type-id-18'/>
    <!-- struct lttng_ust_tracepoint_dlopen -->
    <class-decl name='lttng_ust_tracepoint_dlopen' size-in-bits='448' is-struct='yes' visibility='default' filepath='../../../include/lttng/tracepoint.h' line='263' column='1' id='type-id-19'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- uint32_t lttng_ust_tracepoint_dlopen::struct_size -->
        <var-decl name='struct_size' type-id='type-id-20' visibility='default' filepath='../../../include/lttng/tracepoint.h' line='264' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- void* lttng_ust_tracepoint_dlopen::liblttngust_handle -->
        <var-decl name='liblttngust_handle' type-id='type-id-4' visibility='default' filepath='../../../include/lttng/tracepoint.h' line='266' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int (lttng_ust_tracepoint* const*, int)* lttng_ust_tracepoint_dlopen::lttng_ust_tracepoint_module_register -->
        <var-decl name='lttng_ust_tracepoint_module_register' type-id='type-id-21' visibility='default' filepath='../../../include/lttng/tracepoint.h' line='268' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- int (lttng_ust_tracepoint* const*)* lttng_ust_tracepoint_dlopen::lttng_ust_tracepoint_module_unregister -->
        <var-decl name='lttng_ust_tracepoint_module_unregister' type-id='type-id-22' visibility='default' filepath='../../../include/lttng/tracepoint.h' line='270' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- void ()* lttng_ust_tracepoint_dlopen::rcu_read_lock_sym -->
        <var-decl name='rcu_read_lock_sym' type-id='type-id-23' visibility='default' filepath='../../../include/lttng/tracepoint.h' line='271' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- void ()* lttng_ust_tracepoint_dlopen::rcu_read_unlock_sym -->
        <var-decl name='rcu_read_unlock_sym' type-id='type-id-23' visibility='default' filepath='../../../include/lttng/tracepoint.h' line='272' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- void* (void*)* lttng_ust_tracepoint_dlopen::rcu_dereference_sym -->
        <var-decl name='rcu_dereference_sym' type-id='type-id-24' visibility='default' filepath='../../../include/lttng/tracepoint.h' line='273' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef __uint32_t uint32_t -->
    <typedef-decl name='uint32_t' type-id='type-id-25' filepath='/usr/include/bits/stdint-uintn.h' line='26' column='1' id='type-id-20'/>
    <!-- typedef unsigned int __uint32_t -->
    <typedef-decl name='__uint32_t' type-id='type-id-3' filepath='/usr/include/bits/types.h' line='42' column='1' id='type-id-25'/>
    <!-- struct lttng_ust_tracepoint -->
    <class-decl name='lttng_ust_tracepoint' size-in-bits='448' is-struct='yes' visibility='default' filepath='../../../include/lttng/tracepoint-types.h' line='38' column='1' id='type-id-26'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- uint32_t lttng_ust_tracepoint::struct_size -->
        <var-decl name='struct_size' type-id='type-id-20' visibility='default' filepath='../../../include/lttng/tracepoint-types.h' line='39' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const char* lttng_ust_tracepoint::provider_name -->
        <var-decl name='provider_name' type-id='type-id-27' visibility='default' filepath='../../../include/lttng/tracepoint-types.h' line='41' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- const char* lttng_ust_tracepoint::event_name -->
        <var-decl name='event_name' type-id='type-id-27' visibility='default' filepath='../../../include/lttng/tracepoint-types.h' line='42' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- int lttng_ust_tracepoint::state -->
        <var-decl name='state' type-id='type-id-10' visibility='default' filepath='../../../include/lttng/tracepoint-types.h' line='43' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- lttng_ust_tracepoint_probe* lttng_ust_tracepoint::probes -->
        <var-decl name='probes' type-id='type-id-28' visibility='default' filepath='../../../include/lttng/tracepoint-types.h' line='44' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- int* lttng_ust_tracepoint::tracepoint_provider_ref -->
        <var-decl name='tracepoint_provider_ref' type-id='type-id-29' visibility='default' filepath='../../../include/lttng/tracepoint-types.h' line='45' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- const char* lttng_ust_tracepoint::signature -->
        <var-decl name='signature' type-id='type-id-27' visibility='default' filepath='../../../include/lttng/tracepoint-types.h' line='46' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct lttng_ust_tracepoint_probe -->
    <class-decl name='lttng_ust_tracepoint_probe' size-in-bits='128' is-struct='yes' visibility='default' filepath='../../../include/lttng/tracepoint-types.h' line='21' column='1' id='type-id-30'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- void ()* lttng_ust_tracepoint_probe::func -->
        <var-decl name='func' type-id='type-id-23' visibility='default' filepath='../../../include/lttng/tracepoint-types.h' line='22' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- void* lttng_ust_tracepoint_probe::data -->
        <var-decl name='data' type-id='type-id-4' visibility='default' filepath='../../../include/lttng/tracepoint-types.h' line='23' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct lttng_ust_tracepoint_destructors_syms -->
    <class-decl name='lttng_ust_tracepoint_destructors_syms' size-in-bits='192' is-struct='yes' visibility='default' filepath='../../../include/lttng/tracepoint.h' line='320' column='1' id='type-id-31'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- uint32_t lttng_ust_tracepoint_destructors_syms::struct_size -->
        <var-decl name='struct_size' type-id='type-id-20' visibility='default' filepath='../../../include/lttng/tracepoint.h' line='321' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- void ()* lttng_ust_tracepoint_destructors_syms::tracepoint_disable_destructors -->
        <var-decl name='tracepoint_disable_destructors' type-id='type-id-23' visibility='default' filepath='../../../include/lttng/tracepoint.h' line='323' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int ()* lttng_ust_tracepoint_destructors_syms::tracepoint_get_destructors_state -->
        <var-decl name='tracepoint_get_destructors_state' type-id='type-id-32' visibility='default' filepath='../../../include/lttng/tracepoint.h' line='324' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct lttng_ust_probe_desc -->
    <class-decl name='lttng_ust_probe_desc' size-in-bits='320' is-struct='yes' visibility='default' filepath='../../../include/lttng/ust-events.h' line='315' column='1' id='type-id-33'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- uint32_t lttng_ust_probe_desc::struct_size -->
        <var-decl name='struct_size' type-id='type-id-20' visibility='default' filepath='../../../include/lttng/ust-events.h' line='316' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const char* lttng_ust_probe_desc::provider_name -->
        <var-decl name='provider_name' type-id='type-id-27' visibility='default' filepath='../../../include/lttng/ust-events.h' line='318' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- const lttng_ust_event_desc* const* lttng_ust_probe_desc::event_desc -->
        <var-decl name='event_desc' type-id='type-id-34' visibility='default' filepath='../../../include/lttng/ust-events.h' line='319' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- unsigned int lttng_ust_probe_desc::nr_events -->
        <var-decl name='nr_events' type-id='type-id-3' visibility='default' filepath='../../../include/lttng/ust-events.h' line='320' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- uint32_t lttng_ust_probe_desc::major -->
        <var-decl name='major' type-id='type-id-20' visibility='default' filepath='../../../include/lttng/ust-events.h' line='321' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- uint32_t lttng_ust_probe_desc::minor -->
        <var-decl name='minor' type-id='type-id-20' visibility='default' filepath='../../../include/lttng/ust-events.h' line='322' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct lttng_ust_event_desc -->
    <class-decl name='lttng_ust_event_desc' size-in-bits='384' is-struct='yes' visibility='default' filepath='../../../include/lttng/ust-events.h' line='294' column='1' id='type-id-35'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- uint32_t lttng_ust_event_desc::struct_size -->
        <var-decl name='struct_size' type-id='type-id-20' visibility='default' filepath='../../../include/lttng/ust-events.h' line='295' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const char* lttng_ust_event_desc::event_name -->
        <var-decl name='event_name' type-id='type-id-27' visibility='default' filepath='../../../include/lttng/ust-events.h' line='297' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- const lttng_ust_probe_desc* lttng_ust_event_desc::probe_desc -->
        <var-decl name='probe_desc' type-id='type-id-36' visibility='default' filepath='../../../include/lttng/ust-events.h' line='298' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- const lttng_ust_tracepoint_class* lttng_ust_event_desc::tp_class -->
        <var-decl name='tp_class' type-id='type-id-37' visibility='default' filepath='../../../include/lttng/ust-events.h' line='299' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- const int** lttng_ust_event_desc::loglevel -->
        <var-decl name='loglevel' type-id='type-id-38' visibility='default' filepath='../../../include/lttng/ust-events.h' line='300' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- const char** lttng_ust_event_desc::model_emf_uri -->
        <var-decl name='model_emf_uri' type-id='type-id-39' visibility='default' filepath='../../../include/lttng/ust-events.h' line='301' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct lttng_ust_tracepoint_class -->
    <class-decl name='lttng_ust_tracepoint_class' size-in-bits='384' is-struct='yes' visibility='default' filepath='../../../include/lttng/ust-events.h' line='273' column='1' id='type-id-40'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- uint32_t lttng_ust_tracepoint_class::struct_size -->
        <var-decl name='struct_size' type-id='type-id-20' visibility='default' filepath='../../../include/lttng/ust-events.h' line='274' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const lttng_ust_event_field* const* lttng_ust_tracepoint_class::fields -->
        <var-decl name='fields' type-id='type-id-41' visibility='default' filepath='../../../include/lttng/ust-events.h' line='276' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- size_t lttng_ust_tracepoint_class::nr_fields -->
        <var-decl name='nr_fields' type-id='type-id-42' visibility='default' filepath='../../../include/lttng/ust-events.h' line='277' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- void ()* lttng_ust_tracepoint_class::probe_callback -->
        <var-decl name='probe_callback' type-id='type-id-23' visibility='default' filepath='../../../include/lttng/ust-events.h' line='278' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- const char* lttng_ust_tracepoint_class::signature -->
        <var-decl name='signature' type-id='type-id-27' visibility='default' filepath='../../../include/lttng/ust-events.h' line='279' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- const lttng_ust_probe_desc* lttng_ust_tracepoint_class::probe_desc -->
        <var-decl name='probe_desc' type-id='type-id-36' visibility='default' filepath='../../../include/lttng/ust-events.h' line='280' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct lttng_ust_event_field -->
    <class-decl name='lttng_ust_event_field' size-in-bits='256' is-struct='yes' visibility='default' filepath='../../../include/lttng/ust-events.h' line='250' column='1' id='type-id-43'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- uint32_t lttng_ust_event_field::struct_size -->
        <var-decl name='struct_size' type-id='type-id-20' visibility='default' filepath='../../../include/lttng/ust-events.h' line='251' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const char* lttng_ust_event_field::name -->
        <var-decl name='name' type-id='type-id-27' visibility='default' filepath='../../../include/lttng/ust-events.h' line='253' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- const lttng_ust_type_common* lttng_ust_event_field::type -->
        <var-decl name='type' type-id='type-id-44' visibility='default' filepath='../../../include/lttng/ust-events.h' line='254' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='31'>
        <!-- unsigned int lttng_ust_event_field::nowrite -->
        <var-decl name='nowrite' type-id='type-id-3' visibility='default' filepath='../../../include/lttng/ust-events.h' line='255' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='30'>
        <!-- unsigned int lttng_ust_event_field::nofilter -->
        <var-decl name='nofilter' type-id='type-id-3' visibility='default' filepath='../../../include/lttng/ust-events.h' line='256' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct lttng_ust_type_common -->
    <class-decl name='lttng_ust_type_common' size-in-bits='32' is-struct='yes' visibility='default' filepath='../../../include/lttng/ust-events.h' line='110' column='1' id='type-id-45'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- lttng_ust_type lttng_ust_type_common::type -->
        <var-decl name='type' type-id='type-id-46' visibility='default' filepath='../../../include/lttng/ust-events.h' line='111' column='1'/>
      </data-member>
    </class-decl>
    <!-- enum lttng_ust_type -->
    <enum-decl name='lttng_ust_type' filepath='../../../include/lttng/ust-events.h' line='56' column='1' id='type-id-46'>
      <underlying-type type-id='type-id-14'/>
      <enumerator name='lttng_ust_type_integer' value='0'/>
      <enumerator name='lttng_ust_type_string' value='1'/>
      <enumerator name='lttng_ust_type_float' value='2'/>
      <enumerator name='lttng_ust_type_dynamic' value='3'/>
      <enumerator name='lttng_ust_type_enum' value='4'/>
      <enumerator name='lttng_ust_type_array' value='5'/>
      <enumerator name='lttng_ust_type_sequence' value='6'/>
      <enumerator name='lttng_ust_type_struct' value='7'/>
      <enumerator name='NR_LTTNG_UST_TYPE' value='8'/>
    </enum-decl>
    <!-- typedef unsigned long int size_t -->
    <typedef-decl name='size_t' type-id='type-id-16' filepath='/usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/include/stddef.h' line='209' column='1' id='type-id-42'/>
    <!-- struct JNINativeInterface_ -->
    <class-decl name='JNINativeInterface_' size-in-bits='14912' is-struct='yes' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='214' column='1' id='type-id-47'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- void* JNINativeInterface_::reserved0 -->
        <var-decl name='reserved0' type-id='type-id-4' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='215' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- void* JNINativeInterface_::reserved1 -->
        <var-decl name='reserved1' type-id='type-id-4' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='216' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- void* JNINativeInterface_::reserved2 -->
        <var-decl name='reserved2' type-id='type-id-4' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='217' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- void* JNINativeInterface_::reserved3 -->
        <var-decl name='reserved3' type-id='type-id-4' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='219' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- typedef jint (JNIEnv*)* JNINativeInterface_::GetVersion -->
        <var-decl name='GetVersion' type-id='type-id-48' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='220' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- typedef jclass (JNIEnv*, const char*, typedef jobject, const jbyte*, typedef jsize)* JNINativeInterface_::DefineClass -->
        <var-decl name='DefineClass' type-id='type-id-49' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='222' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- typedef jclass (JNIEnv*, const char*)* JNINativeInterface_::FindClass -->
        <var-decl name='FindClass' type-id='type-id-50' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='225' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- typedef jmethodID (JNIEnv*, typedef jobject)* JNINativeInterface_::FromReflectedMethod -->
        <var-decl name='FromReflectedMethod' type-id='type-id-51' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='228' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- typedef jfieldID (JNIEnv*, typedef jobject)* JNINativeInterface_::FromReflectedField -->
        <var-decl name='FromReflectedField' type-id='type-id-52' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='230' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- typedef jobject (JNIEnv*, typedef jclass, typedef jmethodID, typedef jboolean)* JNINativeInterface_::ToReflectedMethod -->
        <var-decl name='ToReflectedMethod' type-id='type-id-53' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='233' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- typedef jclass (JNIEnv*, typedef jclass)* JNINativeInterface_::GetSuperclass -->
        <var-decl name='GetSuperclass' type-id='type-id-54' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='236' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- typedef jboolean (JNIEnv*, typedef jclass, typedef jclass)* JNINativeInterface_::IsAssignableFrom -->
        <var-decl name='IsAssignableFrom' type-id='type-id-55' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='238' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='768'>
        <!-- typedef jobject (JNIEnv*, typedef jclass, typedef jfieldID, typedef jboolean)* JNINativeInterface_::ToReflectedField -->
        <var-decl name='ToReflectedField' type-id='type-id-56' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='241' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- typedef jint (JNIEnv*, typedef jthrowable)* JNINativeInterface_::Throw -->
        <var-decl name='Throw' type-id='type-id-57' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='244' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- typedef jint (JNIEnv*, typedef jclass, const char*)* JNINativeInterface_::ThrowNew -->
        <var-decl name='ThrowNew' type-id='type-id-58' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='246' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- typedef jthrowable (JNIEnv*)* JNINativeInterface_::ExceptionOccurred -->
        <var-decl name='ExceptionOccurred' type-id='type-id-59' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='248' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- void (JNIEnv*)* JNINativeInterface_::ExceptionDescribe -->
        <var-decl name='ExceptionDescribe' type-id='type-id-60' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='250' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- void (JNIEnv*)* JNINativeInterface_::ExceptionClear -->
        <var-decl name='ExceptionClear' type-id='type-id-60' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='252' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1152'>
        <!-- void (JNIEnv*, const char*)* JNINativeInterface_::FatalError -->
        <var-decl name='FatalError' type-id='type-id-61' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='254' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1216'>
        <!-- typedef jint (JNIEnv*, typedef jint)* JNINativeInterface_::PushLocalFrame -->
        <var-decl name='PushLocalFrame' type-id='type-id-62' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='257' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1280'>
        <!-- typedef jobject (JNIEnv*, typedef jobject)* JNINativeInterface_::PopLocalFrame -->
        <var-decl name='PopLocalFrame' type-id='type-id-63' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='259' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1344'>
        <!-- typedef jobject (JNIEnv*, typedef jobject)* JNINativeInterface_::NewGlobalRef -->
        <var-decl name='NewGlobalRef' type-id='type-id-63' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='262' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1408'>
        <!-- void (JNIEnv*, typedef jobject)* JNINativeInterface_::DeleteGlobalRef -->
        <var-decl name='DeleteGlobalRef' type-id='type-id-64' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='264' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1472'>
        <!-- void (JNIEnv*, typedef jobject)* JNINativeInterface_::DeleteLocalRef -->
        <var-decl name='DeleteLocalRef' type-id='type-id-64' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='266' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1536'>
        <!-- typedef jboolean (JNIEnv*, typedef jobject, typedef jobject)* JNINativeInterface_::IsSameObject -->
        <var-decl name='IsSameObject' type-id='type-id-65' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='268' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1600'>
        <!-- typedef jobject (JNIEnv*, typedef jobject)* JNINativeInterface_::NewLocalRef -->
        <var-decl name='NewLocalRef' type-id='type-id-63' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='270' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1664'>
        <!-- typedef jint (JNIEnv*, typedef jint)* JNINativeInterface_::EnsureLocalCapacity -->
        <var-decl name='EnsureLocalCapacity' type-id='type-id-62' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='272' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1728'>
        <!-- typedef jobject (JNIEnv*, typedef jclass)* JNINativeInterface_::AllocObject -->
        <var-decl name='AllocObject' type-id='type-id-66' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='275' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1792'>
        <!-- typedef jobject (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::NewObject -->
        <var-decl name='NewObject' type-id='type-id-67' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='277' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1856'>
        <!-- typedef jobject (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::NewObjectV -->
        <var-decl name='NewObjectV' type-id='type-id-68' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='279' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1920'>
        <!-- typedef jobject (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::NewObjectA -->
        <var-decl name='NewObjectA' type-id='type-id-69' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='281' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1984'>
        <!-- typedef jclass (JNIEnv*, typedef jobject)* JNINativeInterface_::GetObjectClass -->
        <var-decl name='GetObjectClass' type-id='type-id-70' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='284' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2048'>
        <!-- typedef jboolean (JNIEnv*, typedef jobject, typedef jclass)* JNINativeInterface_::IsInstanceOf -->
        <var-decl name='IsInstanceOf' type-id='type-id-71' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='286' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2112'>
        <!-- typedef jmethodID (JNIEnv*, typedef jclass, const char*, const char*)* JNINativeInterface_::GetMethodID -->
        <var-decl name='GetMethodID' type-id='type-id-72' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='289' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2176'>
        <!-- typedef jobject (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallObjectMethod -->
        <var-decl name='CallObjectMethod' type-id='type-id-73' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='292' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2240'>
        <!-- typedef jobject (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallObjectMethodV -->
        <var-decl name='CallObjectMethodV' type-id='type-id-74' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='294' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2304'>
        <!-- typedef jobject (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallObjectMethodA -->
        <var-decl name='CallObjectMethodA' type-id='type-id-75' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='296' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2368'>
        <!-- typedef jboolean (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallBooleanMethod -->
        <var-decl name='CallBooleanMethod' type-id='type-id-76' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='299' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2432'>
        <!-- typedef jboolean (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallBooleanMethodV -->
        <var-decl name='CallBooleanMethodV' type-id='type-id-77' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='301' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2496'>
        <!-- typedef jboolean (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallBooleanMethodA -->
        <var-decl name='CallBooleanMethodA' type-id='type-id-78' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='303' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2560'>
        <!-- typedef jbyte (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallByteMethod -->
        <var-decl name='CallByteMethod' type-id='type-id-79' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='306' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2624'>
        <!-- typedef jbyte (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallByteMethodV -->
        <var-decl name='CallByteMethodV' type-id='type-id-80' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='308' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2688'>
        <!-- typedef jbyte (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallByteMethodA -->
        <var-decl name='CallByteMethodA' type-id='type-id-81' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='310' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2752'>
        <!-- typedef jchar (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallCharMethod -->
        <var-decl name='CallCharMethod' type-id='type-id-82' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='313' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2816'>
        <!-- typedef jchar (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallCharMethodV -->
        <var-decl name='CallCharMethodV' type-id='type-id-83' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='315' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2880'>
        <!-- typedef jchar (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallCharMethodA -->
        <var-decl name='CallCharMethodA' type-id='type-id-84' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='317' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2944'>
        <!-- typedef jshort (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallShortMethod -->
        <var-decl name='CallShortMethod' type-id='type-id-85' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='320' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3008'>
        <!-- typedef jshort (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallShortMethodV -->
        <var-decl name='CallShortMethodV' type-id='type-id-86' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='322' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3072'>
        <!-- typedef jshort (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallShortMethodA -->
        <var-decl name='CallShortMethodA' type-id='type-id-87' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='324' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3136'>
        <!-- typedef jint (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallIntMethod -->
        <var-decl name='CallIntMethod' type-id='type-id-88' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='327' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3200'>
        <!-- typedef jint (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallIntMethodV -->
        <var-decl name='CallIntMethodV' type-id='type-id-89' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='329' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3264'>
        <!-- typedef jint (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallIntMethodA -->
        <var-decl name='CallIntMethodA' type-id='type-id-90' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='331' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3328'>
        <!-- typedef jlong (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallLongMethod -->
        <var-decl name='CallLongMethod' type-id='type-id-91' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='334' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3392'>
        <!-- typedef jlong (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallLongMethodV -->
        <var-decl name='CallLongMethodV' type-id='type-id-92' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='336' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3456'>
        <!-- typedef jlong (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallLongMethodA -->
        <var-decl name='CallLongMethodA' type-id='type-id-93' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='338' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3520'>
        <!-- typedef jfloat (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallFloatMethod -->
        <var-decl name='CallFloatMethod' type-id='type-id-94' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='341' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3584'>
        <!-- typedef jfloat (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallFloatMethodV -->
        <var-decl name='CallFloatMethodV' type-id='type-id-95' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='343' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3648'>
        <!-- typedef jfloat (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallFloatMethodA -->
        <var-decl name='CallFloatMethodA' type-id='type-id-96' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='345' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3712'>
        <!-- typedef jdouble (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallDoubleMethod -->
        <var-decl name='CallDoubleMethod' type-id='type-id-97' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='348' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3776'>
        <!-- typedef jdouble (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallDoubleMethodV -->
        <var-decl name='CallDoubleMethodV' type-id='type-id-98' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='350' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3840'>
        <!-- typedef jdouble (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallDoubleMethodA -->
        <var-decl name='CallDoubleMethodA' type-id='type-id-99' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='352' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3904'>
        <!-- void (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallVoidMethod -->
        <var-decl name='CallVoidMethod' type-id='type-id-100' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='355' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3968'>
        <!-- void (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallVoidMethodV -->
        <var-decl name='CallVoidMethodV' type-id='type-id-101' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='357' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4032'>
        <!-- void (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallVoidMethodA -->
        <var-decl name='CallVoidMethodA' type-id='type-id-102' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='359' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4096'>
        <!-- typedef jobject (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallNonvirtualObjectMethod -->
        <var-decl name='CallNonvirtualObjectMethod' type-id='type-id-103' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='362' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4160'>
        <!-- typedef jobject (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallNonvirtualObjectMethodV -->
        <var-decl name='CallNonvirtualObjectMethodV' type-id='type-id-104' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='364' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4224'>
        <!-- typedef jobject (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallNonvirtualObjectMethodA -->
        <var-decl name='CallNonvirtualObjectMethodA' type-id='type-id-105' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='367' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4288'>
        <!-- typedef jboolean (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallNonvirtualBooleanMethod -->
        <var-decl name='CallNonvirtualBooleanMethod' type-id='type-id-106' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='371' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4352'>
        <!-- typedef jboolean (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallNonvirtualBooleanMethodV -->
        <var-decl name='CallNonvirtualBooleanMethodV' type-id='type-id-107' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='373' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4416'>
        <!-- typedef jboolean (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallNonvirtualBooleanMethodA -->
        <var-decl name='CallNonvirtualBooleanMethodA' type-id='type-id-108' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='376' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4480'>
        <!-- typedef jbyte (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallNonvirtualByteMethod -->
        <var-decl name='CallNonvirtualByteMethod' type-id='type-id-109' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='380' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4544'>
        <!-- typedef jbyte (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallNonvirtualByteMethodV -->
        <var-decl name='CallNonvirtualByteMethodV' type-id='type-id-110' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='382' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4608'>
        <!-- typedef jbyte (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallNonvirtualByteMethodA -->
        <var-decl name='CallNonvirtualByteMethodA' type-id='type-id-111' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='385' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4672'>
        <!-- typedef jchar (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallNonvirtualCharMethod -->
        <var-decl name='CallNonvirtualCharMethod' type-id='type-id-112' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='389' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4736'>
        <!-- typedef jchar (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallNonvirtualCharMethodV -->
        <var-decl name='CallNonvirtualCharMethodV' type-id='type-id-113' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='391' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4800'>
        <!-- typedef jchar (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallNonvirtualCharMethodA -->
        <var-decl name='CallNonvirtualCharMethodA' type-id='type-id-114' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='394' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4864'>
        <!-- typedef jshort (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallNonvirtualShortMethod -->
        <var-decl name='CallNonvirtualShortMethod' type-id='type-id-115' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='398' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4928'>
        <!-- typedef jshort (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallNonvirtualShortMethodV -->
        <var-decl name='CallNonvirtualShortMethodV' type-id='type-id-116' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='400' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4992'>
        <!-- typedef jshort (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallNonvirtualShortMethodA -->
        <var-decl name='CallNonvirtualShortMethodA' type-id='type-id-117' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='403' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5056'>
        <!-- typedef jint (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallNonvirtualIntMethod -->
        <var-decl name='CallNonvirtualIntMethod' type-id='type-id-118' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='407' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5120'>
        <!-- typedef jint (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallNonvirtualIntMethodV -->
        <var-decl name='CallNonvirtualIntMethodV' type-id='type-id-119' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='409' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5184'>
        <!-- typedef jint (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallNonvirtualIntMethodA -->
        <var-decl name='CallNonvirtualIntMethodA' type-id='type-id-120' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='412' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5248'>
        <!-- typedef jlong (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallNonvirtualLongMethod -->
        <var-decl name='CallNonvirtualLongMethod' type-id='type-id-121' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='416' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5312'>
        <!-- typedef jlong (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallNonvirtualLongMethodV -->
        <var-decl name='CallNonvirtualLongMethodV' type-id='type-id-122' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='418' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5376'>
        <!-- typedef jlong (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallNonvirtualLongMethodA -->
        <var-decl name='CallNonvirtualLongMethodA' type-id='type-id-123' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='421' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5440'>
        <!-- typedef jfloat (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallNonvirtualFloatMethod -->
        <var-decl name='CallNonvirtualFloatMethod' type-id='type-id-124' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='425' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5504'>
        <!-- typedef jfloat (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallNonvirtualFloatMethodV -->
        <var-decl name='CallNonvirtualFloatMethodV' type-id='type-id-125' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='427' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5568'>
        <!-- typedef jfloat (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallNonvirtualFloatMethodA -->
        <var-decl name='CallNonvirtualFloatMethodA' type-id='type-id-126' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='430' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5632'>
        <!-- typedef jdouble (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallNonvirtualDoubleMethod -->
        <var-decl name='CallNonvirtualDoubleMethod' type-id='type-id-127' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='434' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5696'>
        <!-- typedef jdouble (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallNonvirtualDoubleMethodV -->
        <var-decl name='CallNonvirtualDoubleMethodV' type-id='type-id-128' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='436' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5760'>
        <!-- typedef jdouble (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallNonvirtualDoubleMethodA -->
        <var-decl name='CallNonvirtualDoubleMethodA' type-id='type-id-129' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='439' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5824'>
        <!-- void (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallNonvirtualVoidMethod -->
        <var-decl name='CallNonvirtualVoidMethod' type-id='type-id-130' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='443' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5888'>
        <!-- void (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallNonvirtualVoidMethodV -->
        <var-decl name='CallNonvirtualVoidMethodV' type-id='type-id-131' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='445' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5952'>
        <!-- void (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallNonvirtualVoidMethodA -->
        <var-decl name='CallNonvirtualVoidMethodA' type-id='type-id-132' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='448' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6016'>
        <!-- typedef jfieldID (JNIEnv*, typedef jclass, const char*, const char*)* JNINativeInterface_::GetFieldID -->
        <var-decl name='GetFieldID' type-id='type-id-133' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='452' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6080'>
        <!-- typedef jobject (JNIEnv*, typedef jobject, typedef jfieldID)* JNINativeInterface_::GetObjectField -->
        <var-decl name='GetObjectField' type-id='type-id-134' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='455' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6144'>
        <!-- typedef jboolean (JNIEnv*, typedef jobject, typedef jfieldID)* JNINativeInterface_::GetBooleanField -->
        <var-decl name='GetBooleanField' type-id='type-id-135' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='457' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6208'>
        <!-- typedef jbyte (JNIEnv*, typedef jobject, typedef jfieldID)* JNINativeInterface_::GetByteField -->
        <var-decl name='GetByteField' type-id='type-id-136' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='459' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6272'>
        <!-- typedef jchar (JNIEnv*, typedef jobject, typedef jfieldID)* JNINativeInterface_::GetCharField -->
        <var-decl name='GetCharField' type-id='type-id-137' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='461' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6336'>
        <!-- typedef jshort (JNIEnv*, typedef jobject, typedef jfieldID)* JNINativeInterface_::GetShortField -->
        <var-decl name='GetShortField' type-id='type-id-138' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='463' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6400'>
        <!-- typedef jint (JNIEnv*, typedef jobject, typedef jfieldID)* JNINativeInterface_::GetIntField -->
        <var-decl name='GetIntField' type-id='type-id-139' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='465' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6464'>
        <!-- typedef jlong (JNIEnv*, typedef jobject, typedef jfieldID)* JNINativeInterface_::GetLongField -->
        <var-decl name='GetLongField' type-id='type-id-140' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='467' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6528'>
        <!-- typedef jfloat (JNIEnv*, typedef jobject, typedef jfieldID)* JNINativeInterface_::GetFloatField -->
        <var-decl name='GetFloatField' type-id='type-id-141' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='469' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6592'>
        <!-- typedef jdouble (JNIEnv*, typedef jobject, typedef jfieldID)* JNINativeInterface_::GetDoubleField -->
        <var-decl name='GetDoubleField' type-id='type-id-142' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='471' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6656'>
        <!-- void (JNIEnv*, typedef jobject, typedef jfieldID, typedef jobject)* JNINativeInterface_::SetObjectField -->
        <var-decl name='SetObjectField' type-id='type-id-143' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='474' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6720'>
        <!-- void (JNIEnv*, typedef jobject, typedef jfieldID, typedef jboolean)* JNINativeInterface_::SetBooleanField -->
        <var-decl name='SetBooleanField' type-id='type-id-144' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='476' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6784'>
        <!-- void (JNIEnv*, typedef jobject, typedef jfieldID, typedef jbyte)* JNINativeInterface_::SetByteField -->
        <var-decl name='SetByteField' type-id='type-id-145' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='478' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6848'>
        <!-- void (JNIEnv*, typedef jobject, typedef jfieldID, typedef jchar)* JNINativeInterface_::SetCharField -->
        <var-decl name='SetCharField' type-id='type-id-146' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='480' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6912'>
        <!-- void (JNIEnv*, typedef jobject, typedef jfieldID, typedef jshort)* JNINativeInterface_::SetShortField -->
        <var-decl name='SetShortField' type-id='type-id-147' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='482' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6976'>
        <!-- void (JNIEnv*, typedef jobject, typedef jfieldID, typedef jint)* JNINativeInterface_::SetIntField -->
        <var-decl name='SetIntField' type-id='type-id-148' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='484' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='7040'>
        <!-- void (JNIEnv*, typedef jobject, typedef jfieldID, typedef jlong)* JNINativeInterface_::SetLongField -->
        <var-decl name='SetLongField' type-id='type-id-149' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='486' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='7104'>
        <!-- void (JNIEnv*, typedef jobject, typedef jfieldID, typedef jfloat)* JNINativeInterface_::SetFloatField -->
        <var-decl name='SetFloatField' type-id='type-id-150' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='488' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='7168'>
        <!-- void (JNIEnv*, typedef jobject, typedef jfieldID, typedef jdouble)* JNINativeInterface_::SetDoubleField -->
        <var-decl name='SetDoubleField' type-id='type-id-151' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='490' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='7232'>
        <!-- typedef jmethodID (JNIEnv*, typedef jclass, const char*, const char*)* JNINativeInterface_::GetStaticMethodID -->
        <var-decl name='GetStaticMethodID' type-id='type-id-72' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='493' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='7296'>
        <!-- typedef jobject (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallStaticObjectMethod -->
        <var-decl name='CallStaticObjectMethod' type-id='type-id-67' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='496' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='7360'>
        <!-- typedef jobject (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallStaticObjectMethodV -->
        <var-decl name='CallStaticObjectMethodV' type-id='type-id-68' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='498' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='7424'>
        <!-- typedef jobject (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallStaticObjectMethodA -->
        <var-decl name='CallStaticObjectMethodA' type-id='type-id-69' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='500' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='7488'>
        <!-- typedef jboolean (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallStaticBooleanMethod -->
        <var-decl name='CallStaticBooleanMethod' type-id='type-id-152' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='503' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='7552'>
        <!-- typedef jboolean (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallStaticBooleanMethodV -->
        <var-decl name='CallStaticBooleanMethodV' type-id='type-id-153' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='505' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='7616'>
        <!-- typedef jboolean (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallStaticBooleanMethodA -->
        <var-decl name='CallStaticBooleanMethodA' type-id='type-id-154' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='507' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='7680'>
        <!-- typedef jbyte (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallStaticByteMethod -->
        <var-decl name='CallStaticByteMethod' type-id='type-id-155' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='510' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='7744'>
        <!-- typedef jbyte (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallStaticByteMethodV -->
        <var-decl name='CallStaticByteMethodV' type-id='type-id-156' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='512' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='7808'>
        <!-- typedef jbyte (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallStaticByteMethodA -->
        <var-decl name='CallStaticByteMethodA' type-id='type-id-157' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='514' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='7872'>
        <!-- typedef jchar (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallStaticCharMethod -->
        <var-decl name='CallStaticCharMethod' type-id='type-id-158' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='517' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='7936'>
        <!-- typedef jchar (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallStaticCharMethodV -->
        <var-decl name='CallStaticCharMethodV' type-id='type-id-159' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='519' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8000'>
        <!-- typedef jchar (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallStaticCharMethodA -->
        <var-decl name='CallStaticCharMethodA' type-id='type-id-160' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='521' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8064'>
        <!-- typedef jshort (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallStaticShortMethod -->
        <var-decl name='CallStaticShortMethod' type-id='type-id-161' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='524' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8128'>
        <!-- typedef jshort (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallStaticShortMethodV -->
        <var-decl name='CallStaticShortMethodV' type-id='type-id-162' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='526' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8192'>
        <!-- typedef jshort (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallStaticShortMethodA -->
        <var-decl name='CallStaticShortMethodA' type-id='type-id-163' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='528' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8256'>
        <!-- typedef jint (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallStaticIntMethod -->
        <var-decl name='CallStaticIntMethod' type-id='type-id-164' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='531' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8320'>
        <!-- typedef jint (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallStaticIntMethodV -->
        <var-decl name='CallStaticIntMethodV' type-id='type-id-165' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='533' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8384'>
        <!-- typedef jint (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallStaticIntMethodA -->
        <var-decl name='CallStaticIntMethodA' type-id='type-id-166' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='535' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8448'>
        <!-- typedef jlong (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallStaticLongMethod -->
        <var-decl name='CallStaticLongMethod' type-id='type-id-167' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='538' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8512'>
        <!-- typedef jlong (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallStaticLongMethodV -->
        <var-decl name='CallStaticLongMethodV' type-id='type-id-168' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='540' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8576'>
        <!-- typedef jlong (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallStaticLongMethodA -->
        <var-decl name='CallStaticLongMethodA' type-id='type-id-169' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='542' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8640'>
        <!-- typedef jfloat (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallStaticFloatMethod -->
        <var-decl name='CallStaticFloatMethod' type-id='type-id-170' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='545' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8704'>
        <!-- typedef jfloat (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallStaticFloatMethodV -->
        <var-decl name='CallStaticFloatMethodV' type-id='type-id-171' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='547' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8768'>
        <!-- typedef jfloat (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallStaticFloatMethodA -->
        <var-decl name='CallStaticFloatMethodA' type-id='type-id-172' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='549' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8832'>
        <!-- typedef jdouble (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallStaticDoubleMethod -->
        <var-decl name='CallStaticDoubleMethod' type-id='type-id-173' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='552' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8896'>
        <!-- typedef jdouble (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallStaticDoubleMethodV -->
        <var-decl name='CallStaticDoubleMethodV' type-id='type-id-174' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='554' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8960'>
        <!-- typedef jdouble (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallStaticDoubleMethodA -->
        <var-decl name='CallStaticDoubleMethodA' type-id='type-id-175' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='556' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9024'>
        <!-- void (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* JNINativeInterface_::CallStaticVoidMethod -->
        <var-decl name='CallStaticVoidMethod' type-id='type-id-176' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='559' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9088'>
        <!-- void (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* JNINativeInterface_::CallStaticVoidMethodV -->
        <var-decl name='CallStaticVoidMethodV' type-id='type-id-177' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='561' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9152'>
        <!-- void (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* JNINativeInterface_::CallStaticVoidMethodA -->
        <var-decl name='CallStaticVoidMethodA' type-id='type-id-178' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='563' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9216'>
        <!-- typedef jfieldID (JNIEnv*, typedef jclass, const char*, const char*)* JNINativeInterface_::GetStaticFieldID -->
        <var-decl name='GetStaticFieldID' type-id='type-id-133' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='566' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9280'>
        <!-- typedef jobject (JNIEnv*, typedef jclass, typedef jfieldID)* JNINativeInterface_::GetStaticObjectField -->
        <var-decl name='GetStaticObjectField' type-id='type-id-179' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='568' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9344'>
        <!-- typedef jboolean (JNIEnv*, typedef jclass, typedef jfieldID)* JNINativeInterface_::GetStaticBooleanField -->
        <var-decl name='GetStaticBooleanField' type-id='type-id-180' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='570' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9408'>
        <!-- typedef jbyte (JNIEnv*, typedef jclass, typedef jfieldID)* JNINativeInterface_::GetStaticByteField -->
        <var-decl name='GetStaticByteField' type-id='type-id-181' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='572' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9472'>
        <!-- typedef jchar (JNIEnv*, typedef jclass, typedef jfieldID)* JNINativeInterface_::GetStaticCharField -->
        <var-decl name='GetStaticCharField' type-id='type-id-182' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='574' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9536'>
        <!-- typedef jshort (JNIEnv*, typedef jclass, typedef jfieldID)* JNINativeInterface_::GetStaticShortField -->
        <var-decl name='GetStaticShortField' type-id='type-id-183' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='576' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9600'>
        <!-- typedef jint (JNIEnv*, typedef jclass, typedef jfieldID)* JNINativeInterface_::GetStaticIntField -->
        <var-decl name='GetStaticIntField' type-id='type-id-184' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='578' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9664'>
        <!-- typedef jlong (JNIEnv*, typedef jclass, typedef jfieldID)* JNINativeInterface_::GetStaticLongField -->
        <var-decl name='GetStaticLongField' type-id='type-id-185' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='580' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9728'>
        <!-- typedef jfloat (JNIEnv*, typedef jclass, typedef jfieldID)* JNINativeInterface_::GetStaticFloatField -->
        <var-decl name='GetStaticFloatField' type-id='type-id-186' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='582' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9792'>
        <!-- typedef jdouble (JNIEnv*, typedef jclass, typedef jfieldID)* JNINativeInterface_::GetStaticDoubleField -->
        <var-decl name='GetStaticDoubleField' type-id='type-id-187' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='584' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9856'>
        <!-- void (JNIEnv*, typedef jclass, typedef jfieldID, typedef jobject)* JNINativeInterface_::SetStaticObjectField -->
        <var-decl name='SetStaticObjectField' type-id='type-id-188' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='587' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9920'>
        <!-- void (JNIEnv*, typedef jclass, typedef jfieldID, typedef jboolean)* JNINativeInterface_::SetStaticBooleanField -->
        <var-decl name='SetStaticBooleanField' type-id='type-id-189' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='589' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9984'>
        <!-- void (JNIEnv*, typedef jclass, typedef jfieldID, typedef jbyte)* JNINativeInterface_::SetStaticByteField -->
        <var-decl name='SetStaticByteField' type-id='type-id-190' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='591' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10048'>
        <!-- void (JNIEnv*, typedef jclass, typedef jfieldID, typedef jchar)* JNINativeInterface_::SetStaticCharField -->
        <var-decl name='SetStaticCharField' type-id='type-id-191' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='593' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10112'>
        <!-- void (JNIEnv*, typedef jclass, typedef jfieldID, typedef jshort)* JNINativeInterface_::SetStaticShortField -->
        <var-decl name='SetStaticShortField' type-id='type-id-192' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='595' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10176'>
        <!-- void (JNIEnv*, typedef jclass, typedef jfieldID, typedef jint)* JNINativeInterface_::SetStaticIntField -->
        <var-decl name='SetStaticIntField' type-id='type-id-193' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='597' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10240'>
        <!-- void (JNIEnv*, typedef jclass, typedef jfieldID, typedef jlong)* JNINativeInterface_::SetStaticLongField -->
        <var-decl name='SetStaticLongField' type-id='type-id-194' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='599' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10304'>
        <!-- void (JNIEnv*, typedef jclass, typedef jfieldID, typedef jfloat)* JNINativeInterface_::SetStaticFloatField -->
        <var-decl name='SetStaticFloatField' type-id='type-id-195' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='601' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10368'>
        <!-- void (JNIEnv*, typedef jclass, typedef jfieldID, typedef jdouble)* JNINativeInterface_::SetStaticDoubleField -->
        <var-decl name='SetStaticDoubleField' type-id='type-id-196' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='603' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10432'>
        <!-- typedef jstring (JNIEnv*, const jchar*, typedef jsize)* JNINativeInterface_::NewString -->
        <var-decl name='NewString' type-id='type-id-197' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='606' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10496'>
        <!-- typedef jsize (JNIEnv*, typedef jstring)* JNINativeInterface_::GetStringLength -->
        <var-decl name='GetStringLength' type-id='type-id-198' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='608' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10560'>
        <!-- const jchar* (JNIEnv*, typedef jstring, jboolean*)* JNINativeInterface_::GetStringChars -->
        <var-decl name='GetStringChars' type-id='type-id-199' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='610' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10624'>
        <!-- void (JNIEnv*, typedef jstring, const jchar*)* JNINativeInterface_::ReleaseStringChars -->
        <var-decl name='ReleaseStringChars' type-id='type-id-200' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='612' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10688'>
        <!-- typedef jstring (JNIEnv*, const char*)* JNINativeInterface_::NewStringUTF -->
        <var-decl name='NewStringUTF' type-id='type-id-201' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='615' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10752'>
        <!-- typedef jsize (JNIEnv*, typedef jstring)* JNINativeInterface_::GetStringUTFLength -->
        <var-decl name='GetStringUTFLength' type-id='type-id-198' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='617' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10816'>
        <!-- const char* (JNIEnv*, typedef jstring, jboolean*)* JNINativeInterface_::GetStringUTFChars -->
        <var-decl name='GetStringUTFChars' type-id='type-id-202' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='619' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10880'>
        <!-- void (JNIEnv*, typedef jstring, const char*)* JNINativeInterface_::ReleaseStringUTFChars -->
        <var-decl name='ReleaseStringUTFChars' type-id='type-id-203' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='621' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10944'>
        <!-- typedef jsize (JNIEnv*, typedef jarray)* JNINativeInterface_::GetArrayLength -->
        <var-decl name='GetArrayLength' type-id='type-id-204' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='625' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='11008'>
        <!-- typedef jobjectArray (JNIEnv*, typedef jsize, typedef jclass, typedef jobject)* JNINativeInterface_::NewObjectArray -->
        <var-decl name='NewObjectArray' type-id='type-id-205' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='628' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='11072'>
        <!-- typedef jobject (JNIEnv*, typedef jobjectArray, typedef jsize)* JNINativeInterface_::GetObjectArrayElement -->
        <var-decl name='GetObjectArrayElement' type-id='type-id-206' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='630' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='11136'>
        <!-- void (JNIEnv*, typedef jobjectArray, typedef jsize, typedef jobject)* JNINativeInterface_::SetObjectArrayElement -->
        <var-decl name='SetObjectArrayElement' type-id='type-id-207' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='632' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='11200'>
        <!-- typedef jbooleanArray (JNIEnv*, typedef jsize)* JNINativeInterface_::NewBooleanArray -->
        <var-decl name='NewBooleanArray' type-id='type-id-208' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='635' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='11264'>
        <!-- typedef jbyteArray (JNIEnv*, typedef jsize)* JNINativeInterface_::NewByteArray -->
        <var-decl name='NewByteArray' type-id='type-id-209' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='637' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='11328'>
        <!-- typedef jcharArray (JNIEnv*, typedef jsize)* JNINativeInterface_::NewCharArray -->
        <var-decl name='NewCharArray' type-id='type-id-210' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='639' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='11392'>
        <!-- typedef jshortArray (JNIEnv*, typedef jsize)* JNINativeInterface_::NewShortArray -->
        <var-decl name='NewShortArray' type-id='type-id-211' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='641' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='11456'>
        <!-- typedef jintArray (JNIEnv*, typedef jsize)* JNINativeInterface_::NewIntArray -->
        <var-decl name='NewIntArray' type-id='type-id-212' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='643' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='11520'>
        <!-- typedef jlongArray (JNIEnv*, typedef jsize)* JNINativeInterface_::NewLongArray -->
        <var-decl name='NewLongArray' type-id='type-id-213' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='645' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='11584'>
        <!-- typedef jfloatArray (JNIEnv*, typedef jsize)* JNINativeInterface_::NewFloatArray -->
        <var-decl name='NewFloatArray' type-id='type-id-214' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='647' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='11648'>
        <!-- typedef jdoubleArray (JNIEnv*, typedef jsize)* JNINativeInterface_::NewDoubleArray -->
        <var-decl name='NewDoubleArray' type-id='type-id-215' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='649' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='11712'>
        <!-- jboolean* (JNIEnv*, typedef jbooleanArray, jboolean*)* JNINativeInterface_::GetBooleanArrayElements -->
        <var-decl name='GetBooleanArrayElements' type-id='type-id-216' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='652' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='11776'>
        <!-- jbyte* (JNIEnv*, typedef jbyteArray, jboolean*)* JNINativeInterface_::GetByteArrayElements -->
        <var-decl name='GetByteArrayElements' type-id='type-id-217' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='654' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='11840'>
        <!-- jchar* (JNIEnv*, typedef jcharArray, jboolean*)* JNINativeInterface_::GetCharArrayElements -->
        <var-decl name='GetCharArrayElements' type-id='type-id-218' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='656' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='11904'>
        <!-- jshort* (JNIEnv*, typedef jshortArray, jboolean*)* JNINativeInterface_::GetShortArrayElements -->
        <var-decl name='GetShortArrayElements' type-id='type-id-219' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='658' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='11968'>
        <!-- jint* (JNIEnv*, typedef jintArray, jboolean*)* JNINativeInterface_::GetIntArrayElements -->
        <var-decl name='GetIntArrayElements' type-id='type-id-220' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='660' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='12032'>
        <!-- jlong* (JNIEnv*, typedef jlongArray, jboolean*)* JNINativeInterface_::GetLongArrayElements -->
        <var-decl name='GetLongArrayElements' type-id='type-id-221' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='662' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='12096'>
        <!-- jfloat* (JNIEnv*, typedef jfloatArray, jboolean*)* JNINativeInterface_::GetFloatArrayElements -->
        <var-decl name='GetFloatArrayElements' type-id='type-id-222' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='664' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='12160'>
        <!-- jdouble* (JNIEnv*, typedef jdoubleArray, jboolean*)* JNINativeInterface_::GetDoubleArrayElements -->
        <var-decl name='GetDoubleArrayElements' type-id='type-id-223' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='666' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='12224'>
        <!-- void (JNIEnv*, typedef jbooleanArray, jboolean*, typedef jint)* JNINativeInterface_::ReleaseBooleanArrayElements -->
        <var-decl name='ReleaseBooleanArrayElements' type-id='type-id-224' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='669' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='12288'>
        <!-- void (JNIEnv*, typedef jbyteArray, jbyte*, typedef jint)* JNINativeInterface_::ReleaseByteArrayElements -->
        <var-decl name='ReleaseByteArrayElements' type-id='type-id-225' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='671' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='12352'>
        <!-- void (JNIEnv*, typedef jcharArray, jchar*, typedef jint)* JNINativeInterface_::ReleaseCharArrayElements -->
        <var-decl name='ReleaseCharArrayElements' type-id='type-id-226' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='673' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='12416'>
        <!-- void (JNIEnv*, typedef jshortArray, jshort*, typedef jint)* JNINativeInterface_::ReleaseShortArrayElements -->
        <var-decl name='ReleaseShortArrayElements' type-id='type-id-227' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='675' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='12480'>
        <!-- void (JNIEnv*, typedef jintArray, jint*, typedef jint)* JNINativeInterface_::ReleaseIntArrayElements -->
        <var-decl name='ReleaseIntArrayElements' type-id='type-id-228' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='677' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='12544'>
        <!-- void (JNIEnv*, typedef jlongArray, jlong*, typedef jint)* JNINativeInterface_::ReleaseLongArrayElements -->
        <var-decl name='ReleaseLongArrayElements' type-id='type-id-229' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='679' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='12608'>
        <!-- void (JNIEnv*, typedef jfloatArray, jfloat*, typedef jint)* JNINativeInterface_::ReleaseFloatArrayElements -->
        <var-decl name='ReleaseFloatArrayElements' type-id='type-id-230' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='681' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='12672'>
        <!-- void (JNIEnv*, typedef jdoubleArray, jdouble*, typedef jint)* JNINativeInterface_::ReleaseDoubleArrayElements -->
        <var-decl name='ReleaseDoubleArrayElements' type-id='type-id-231' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='683' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='12736'>
        <!-- void (JNIEnv*, typedef jbooleanArray, typedef jsize, typedef jsize, jboolean*)* JNINativeInterface_::GetBooleanArrayRegion -->
        <var-decl name='GetBooleanArrayRegion' type-id='type-id-232' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='686' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='12800'>
        <!-- void (JNIEnv*, typedef jbyteArray, typedef jsize, typedef jsize, jbyte*)* JNINativeInterface_::GetByteArrayRegion -->
        <var-decl name='GetByteArrayRegion' type-id='type-id-233' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='688' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='12864'>
        <!-- void (JNIEnv*, typedef jcharArray, typedef jsize, typedef jsize, jchar*)* JNINativeInterface_::GetCharArrayRegion -->
        <var-decl name='GetCharArrayRegion' type-id='type-id-234' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='690' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='12928'>
        <!-- void (JNIEnv*, typedef jshortArray, typedef jsize, typedef jsize, jshort*)* JNINativeInterface_::GetShortArrayRegion -->
        <var-decl name='GetShortArrayRegion' type-id='type-id-235' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='692' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='12992'>
        <!-- void (JNIEnv*, typedef jintArray, typedef jsize, typedef jsize, jint*)* JNINativeInterface_::GetIntArrayRegion -->
        <var-decl name='GetIntArrayRegion' type-id='type-id-236' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='694' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='13056'>
        <!-- void (JNIEnv*, typedef jlongArray, typedef jsize, typedef jsize, jlong*)* JNINativeInterface_::GetLongArrayRegion -->
        <var-decl name='GetLongArrayRegion' type-id='type-id-237' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='696' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='13120'>
        <!-- void (JNIEnv*, typedef jfloatArray, typedef jsize, typedef jsize, jfloat*)* JNINativeInterface_::GetFloatArrayRegion -->
        <var-decl name='GetFloatArrayRegion' type-id='type-id-238' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='698' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='13184'>
        <!-- void (JNIEnv*, typedef jdoubleArray, typedef jsize, typedef jsize, jdouble*)* JNINativeInterface_::GetDoubleArrayRegion -->
        <var-decl name='GetDoubleArrayRegion' type-id='type-id-239' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='700' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='13248'>
        <!-- void (JNIEnv*, typedef jbooleanArray, typedef jsize, typedef jsize, const jboolean*)* JNINativeInterface_::SetBooleanArrayRegion -->
        <var-decl name='SetBooleanArrayRegion' type-id='type-id-240' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='703' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='13312'>
        <!-- void (JNIEnv*, typedef jbyteArray, typedef jsize, typedef jsize, const jbyte*)* JNINativeInterface_::SetByteArrayRegion -->
        <var-decl name='SetByteArrayRegion' type-id='type-id-241' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='705' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='13376'>
        <!-- void (JNIEnv*, typedef jcharArray, typedef jsize, typedef jsize, const jchar*)* JNINativeInterface_::SetCharArrayRegion -->
        <var-decl name='SetCharArrayRegion' type-id='type-id-242' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='707' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='13440'>
        <!-- void (JNIEnv*, typedef jshortArray, typedef jsize, typedef jsize, const jshort*)* JNINativeInterface_::SetShortArrayRegion -->
        <var-decl name='SetShortArrayRegion' type-id='type-id-243' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='709' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='13504'>
        <!-- void (JNIEnv*, typedef jintArray, typedef jsize, typedef jsize, const jint*)* JNINativeInterface_::SetIntArrayRegion -->
        <var-decl name='SetIntArrayRegion' type-id='type-id-244' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='711' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='13568'>
        <!-- void (JNIEnv*, typedef jlongArray, typedef jsize, typedef jsize, const jlong*)* JNINativeInterface_::SetLongArrayRegion -->
        <var-decl name='SetLongArrayRegion' type-id='type-id-245' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='713' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='13632'>
        <!-- void (JNIEnv*, typedef jfloatArray, typedef jsize, typedef jsize, const jfloat*)* JNINativeInterface_::SetFloatArrayRegion -->
        <var-decl name='SetFloatArrayRegion' type-id='type-id-246' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='715' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='13696'>
        <!-- void (JNIEnv*, typedef jdoubleArray, typedef jsize, typedef jsize, const jdouble*)* JNINativeInterface_::SetDoubleArrayRegion -->
        <var-decl name='SetDoubleArrayRegion' type-id='type-id-247' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='717' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='13760'>
        <!-- typedef jint (JNIEnv*, typedef jclass, const JNINativeMethod*, typedef jint)* JNINativeInterface_::RegisterNatives -->
        <var-decl name='RegisterNatives' type-id='type-id-248' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='720' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='13824'>
        <!-- typedef jint (JNIEnv*, typedef jclass)* JNINativeInterface_::UnregisterNatives -->
        <var-decl name='UnregisterNatives' type-id='type-id-249' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='723' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='13888'>
        <!-- typedef jint (JNIEnv*, typedef jobject)* JNINativeInterface_::MonitorEnter -->
        <var-decl name='MonitorEnter' type-id='type-id-250' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='726' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='13952'>
        <!-- typedef jint (JNIEnv*, typedef jobject)* JNINativeInterface_::MonitorExit -->
        <var-decl name='MonitorExit' type-id='type-id-250' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='728' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='14016'>
        <!-- typedef jint (JNIEnv*, JavaVM**)* JNINativeInterface_::GetJavaVM -->
        <var-decl name='GetJavaVM' type-id='type-id-251' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='731' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='14080'>
        <!-- void (JNIEnv*, typedef jstring, typedef jsize, typedef jsize, jchar*)* JNINativeInterface_::GetStringRegion -->
        <var-decl name='GetStringRegion' type-id='type-id-252' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='734' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='14144'>
        <!-- void (JNIEnv*, typedef jstring, typedef jsize, typedef jsize, char*)* JNINativeInterface_::GetStringUTFRegion -->
        <var-decl name='GetStringUTFRegion' type-id='type-id-253' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='736' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='14208'>
        <!-- void* (JNIEnv*, typedef jarray, jboolean*)* JNINativeInterface_::GetPrimitiveArrayCritical -->
        <var-decl name='GetPrimitiveArrayCritical' type-id='type-id-254' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='739' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='14272'>
        <!-- void (JNIEnv*, typedef jarray, void*, typedef jint)* JNINativeInterface_::ReleasePrimitiveArrayCritical -->
        <var-decl name='ReleasePrimitiveArrayCritical' type-id='type-id-255' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='741' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='14336'>
        <!-- const jchar* (JNIEnv*, typedef jstring, jboolean*)* JNINativeInterface_::GetStringCritical -->
        <var-decl name='GetStringCritical' type-id='type-id-199' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='744' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='14400'>
        <!-- void (JNIEnv*, typedef jstring, const jchar*)* JNINativeInterface_::ReleaseStringCritical -->
        <var-decl name='ReleaseStringCritical' type-id='type-id-200' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='746' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='14464'>
        <!-- typedef jweak (JNIEnv*, typedef jobject)* JNINativeInterface_::NewWeakGlobalRef -->
        <var-decl name='NewWeakGlobalRef' type-id='type-id-256' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='749' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='14528'>
        <!-- void (JNIEnv*, typedef jweak)* JNINativeInterface_::DeleteWeakGlobalRef -->
        <var-decl name='DeleteWeakGlobalRef' type-id='type-id-257' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='751' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='14592'>
        <!-- typedef jboolean (JNIEnv*)* JNINativeInterface_::ExceptionCheck -->
        <var-decl name='ExceptionCheck' type-id='type-id-258' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='754' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='14656'>
        <!-- typedef jobject (JNIEnv*, void*, typedef jlong)* JNINativeInterface_::NewDirectByteBuffer -->
        <var-decl name='NewDirectByteBuffer' type-id='type-id-259' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='757' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='14720'>
        <!-- void* (JNIEnv*, typedef jobject)* JNINativeInterface_::GetDirectBufferAddress -->
        <var-decl name='GetDirectBufferAddress' type-id='type-id-260' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='759' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='14784'>
        <!-- typedef jlong (JNIEnv*, typedef jobject)* JNINativeInterface_::GetDirectBufferCapacity -->
        <var-decl name='GetDirectBufferCapacity' type-id='type-id-261' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='761' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='14848'>
        <!-- typedef jobjectRefType (JNIEnv*, typedef jobject)* JNINativeInterface_::GetObjectRefType -->
        <var-decl name='GetObjectRefType' type-id='type-id-262' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='766' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef int jint -->
    <typedef-decl name='jint' type-id='type-id-10' filepath='/usr/lib/jvm/default/include/linux/jni_md.h' line='42' column='1' id='type-id-263'/>
    <!-- typedef const JNINativeInterface_* JNIEnv -->
    <typedef-decl name='JNIEnv' type-id='type-id-264' filepath='/usr/lib/jvm/default/include/jni.h' line='197' column='1' id='type-id-265'/>
    <!-- typedef jobject jclass -->
    <typedef-decl name='jclass' type-id='type-id-266' filepath='/usr/lib/jvm/default/include/jni.h' line='102' column='1' id='type-id-267'/>
    <!-- typedef _jobject* jobject -->
    <typedef-decl name='jobject' type-id='type-id-268' filepath='/usr/lib/jvm/default/include/jni.h' line='101' column='1' id='type-id-266'/>
    <!-- typedef signed char jbyte -->
    <typedef-decl name='jbyte' type-id='type-id-13' filepath='/usr/lib/jvm/default/include/linux/jni_md.h' line='49' column='1' id='type-id-269'/>
    <!-- typedef jint jsize -->
    <typedef-decl name='jsize' type-id='type-id-263' filepath='/usr/lib/jvm/default/include/jni.h' line='63' column='1' id='type-id-270'/>
    <!-- typedef _jmethodID* jmethodID -->
    <typedef-decl name='jmethodID' type-id='type-id-271' filepath='/usr/lib/jvm/default/include/jni.h' line='136' column='1' id='type-id-272'/>
    <!-- typedef _jfieldID* jfieldID -->
    <typedef-decl name='jfieldID' type-id='type-id-273' filepath='/usr/lib/jvm/default/include/jni.h' line='133' column='1' id='type-id-274'/>
    <!-- typedef unsigned char jboolean -->
    <typedef-decl name='jboolean' type-id='type-id-15' filepath='/usr/lib/jvm/default/include/jni.h' line='57' column='1' id='type-id-275'/>
    <!-- typedef jobject jthrowable -->
    <typedef-decl name='jthrowable' type-id='type-id-266' filepath='/usr/lib/jvm/default/include/jni.h' line='103' column='1' id='type-id-276'/>
    <!-- typedef jvalue jvalue -->
    <typedef-decl name='jvalue' type-id='type-id-277' filepath='/usr/lib/jvm/default/include/jni.h' line='130' column='1' id='type-id-278'/>
    <!-- union jvalue -->
    <union-decl name='jvalue' size-in-bits='64' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='120' column='1' id='type-id-277'>
      <data-member access='private'>
        <!-- jboolean jvalue::z -->
        <var-decl name='z' type-id='type-id-275' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='121' column='1'/>
      </data-member>
      <data-member access='private'>
        <!-- jbyte jvalue::b -->
        <var-decl name='b' type-id='type-id-269' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='122' column='1'/>
      </data-member>
      <data-member access='private'>
        <!-- jchar jvalue::c -->
        <var-decl name='c' type-id='type-id-279' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='123' column='1'/>
      </data-member>
      <data-member access='private'>
        <!-- jshort jvalue::s -->
        <var-decl name='s' type-id='type-id-280' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='124' column='1'/>
      </data-member>
      <data-member access='private'>
        <!-- jint jvalue::i -->
        <var-decl name='i' type-id='type-id-263' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='125' column='1'/>
      </data-member>
      <data-member access='private'>
        <!-- jlong jvalue::j -->
        <var-decl name='j' type-id='type-id-281' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='126' column='1'/>
      </data-member>
      <data-member access='private'>
        <!-- jfloat jvalue::f -->
        <var-decl name='f' type-id='type-id-282' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='127' column='1'/>
      </data-member>
      <data-member access='private'>
        <!-- jdouble jvalue::d -->
        <var-decl name='d' type-id='type-id-283' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='128' column='1'/>
      </data-member>
      <data-member access='private'>
        <!-- jobject jvalue::l -->
        <var-decl name='l' type-id='type-id-266' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='129' column='1'/>
      </data-member>
    </union-decl>
    <!-- typedef unsigned short int jchar -->
    <typedef-decl name='jchar' type-id='type-id-17' filepath='/usr/lib/jvm/default/include/jni.h' line='58' column='1' id='type-id-279'/>
    <!-- typedef short int jshort -->
    <typedef-decl name='jshort' type-id='type-id-12' filepath='/usr/lib/jvm/default/include/jni.h' line='59' column='1' id='type-id-280'/>
    <!-- typedef long int jlong -->
    <typedef-decl name='jlong' type-id='type-id-11' filepath='/usr/lib/jvm/default/include/linux/jni_md.h' line='44' column='1' id='type-id-281'/>
    <!-- typedef float jfloat -->
    <typedef-decl name='jfloat' type-id='type-id-9' filepath='/usr/lib/jvm/default/include/jni.h' line='60' column='1' id='type-id-282'/>
    <!-- typedef double jdouble -->
    <typedef-decl name='jdouble' type-id='type-id-8' filepath='/usr/lib/jvm/default/include/jni.h' line='61' column='1' id='type-id-283'/>
    <!-- typedef jobject jstring -->
    <typedef-decl name='jstring' type-id='type-id-266' filepath='/usr/lib/jvm/default/include/jni.h' line='104' column='1' id='type-id-284'/>
    <!-- typedef jobject jarray -->
    <typedef-decl name='jarray' type-id='type-id-266' filepath='/usr/lib/jvm/default/include/jni.h' line='105' column='1' id='type-id-285'/>
    <!-- typedef jarray jobjectArray -->
    <typedef-decl name='jobjectArray' type-id='type-id-285' filepath='/usr/lib/jvm/default/include/jni.h' line='114' column='1' id='type-id-286'/>
    <!-- typedef jarray jbooleanArray -->
    <typedef-decl name='jbooleanArray' type-id='type-id-285' filepath='/usr/lib/jvm/default/include/jni.h' line='106' column='1' id='type-id-287'/>
    <!-- typedef jarray jbyteArray -->
    <typedef-decl name='jbyteArray' type-id='type-id-285' filepath='/usr/lib/jvm/default/include/jni.h' line='107' column='1' id='type-id-288'/>
    <!-- typedef jarray jcharArray -->
    <typedef-decl name='jcharArray' type-id='type-id-285' filepath='/usr/lib/jvm/default/include/jni.h' line='108' column='1' id='type-id-289'/>
    <!-- typedef jarray jshortArray -->
    <typedef-decl name='jshortArray' type-id='type-id-285' filepath='/usr/lib/jvm/default/include/jni.h' line='109' column='1' id='type-id-290'/>
    <!-- typedef jarray jintArray -->
    <typedef-decl name='jintArray' type-id='type-id-285' filepath='/usr/lib/jvm/default/include/jni.h' line='110' column='1' id='type-id-291'/>
    <!-- typedef jarray jlongArray -->
    <typedef-decl name='jlongArray' type-id='type-id-285' filepath='/usr/lib/jvm/default/include/jni.h' line='111' column='1' id='type-id-292'/>
    <!-- typedef jarray jfloatArray -->
    <typedef-decl name='jfloatArray' type-id='type-id-285' filepath='/usr/lib/jvm/default/include/jni.h' line='112' column='1' id='type-id-293'/>
    <!-- typedef jarray jdoubleArray -->
    <typedef-decl name='jdoubleArray' type-id='type-id-285' filepath='/usr/lib/jvm/default/include/jni.h' line='113' column='1' id='type-id-294'/>
    <!-- typedef __anonymous_struct__ JNINativeMethod -->
    <typedef-decl name='JNINativeMethod' type-id='type-id-295' filepath='/usr/lib/jvm/default/include/jni.h' line='184' column='1' id='type-id-296'/>
    <!-- struct {char* name; char* signature; void* fnPtr;} -->
    <class-decl name='__anonymous_struct__' size-in-bits='192' is-struct='yes' is-anonymous='yes' naming-typedef-id='type-id-296' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='180' column='1' id='type-id-295'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- char* name -->
        <var-decl name='name' type-id='type-id-297' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='181' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- char* signature -->
        <var-decl name='signature' type-id='type-id-297' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='182' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- void* fnPtr -->
        <var-decl name='fnPtr' type-id='type-id-4' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='183' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct JNIInvokeInterface_ -->
    <class-decl name='JNIInvokeInterface_' size-in-bits='512' is-struct='yes' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='1890' column='1' id='type-id-298'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- void* JNIInvokeInterface_::reserved0 -->
        <var-decl name='reserved0' type-id='type-id-4' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='1891' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- void* JNIInvokeInterface_::reserved1 -->
        <var-decl name='reserved1' type-id='type-id-4' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='1892' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- void* JNIInvokeInterface_::reserved2 -->
        <var-decl name='reserved2' type-id='type-id-4' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='1893' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- typedef jint (JavaVM*)* JNIInvokeInterface_::DestroyJavaVM -->
        <var-decl name='DestroyJavaVM' type-id='type-id-299' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='1895' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- typedef jint (JavaVM*, void**, void*)* JNIInvokeInterface_::AttachCurrentThread -->
        <var-decl name='AttachCurrentThread' type-id='type-id-300' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='1897' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- typedef jint (JavaVM*)* JNIInvokeInterface_::DetachCurrentThread -->
        <var-decl name='DetachCurrentThread' type-id='type-id-299' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='1899' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- typedef jint (JavaVM*, void**, typedef jint)* JNIInvokeInterface_::GetEnv -->
        <var-decl name='GetEnv' type-id='type-id-301' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='1901' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- typedef jint (JavaVM*, void**, void*)* JNIInvokeInterface_::AttachCurrentThreadAsDaemon -->
        <var-decl name='AttachCurrentThreadAsDaemon' type-id='type-id-300' visibility='default' filepath='/usr/lib/jvm/default/include/jni.h' line='1903' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef const JNIInvokeInterface_* JavaVM -->
    <typedef-decl name='JavaVM' type-id='type-id-302' filepath='/usr/lib/jvm/default/include/jni.h' line='211' column='1' id='type-id-303'/>
    <!-- typedef jobject jweak -->
    <typedef-decl name='jweak' type-id='type-id-266' filepath='/usr/lib/jvm/default/include/jni.h' line='118' column='1' id='type-id-304'/>
    <!-- typedef _jobjectType jobjectRefType -->
    <typedef-decl name='jobjectRefType' type-id='type-id-305' filepath='/usr/lib/jvm/default/include/jni.h' line='144' column='1' id='type-id-306'/>
    <!-- enum _jobjectType -->
    <enum-decl name='_jobjectType' filepath='/usr/lib/jvm/default/include/jni.h' line='139' column='1' id='type-id-305'>
      <underlying-type type-id='type-id-14'/>
      <enumerator name='JNIInvalidRefType' value='0'/>
      <enumerator name='JNILocalRefType' value='1'/>
      <enumerator name='JNIGlobalRefType' value='2'/>
      <enumerator name='JNIWeakGlobalRefType' value='3'/>
    </enum-decl>
    <!-- JNIEnv* -->
    <pointer-type-def type-id='type-id-265' size-in-bits='64' id='type-id-307'/>
    <!-- JavaVM* -->
    <pointer-type-def type-id='type-id-303' size-in-bits='64' id='type-id-308'/>
    <!-- JavaVM** -->
    <pointer-type-def type-id='type-id-308' size-in-bits='64' id='type-id-309'/>
    <!-- __va_list_tag* -->
    <pointer-type-def type-id='type-id-2' size-in-bits='64' id='type-id-310'/>
    <!-- _jfieldID* -->
    <pointer-type-def type-id='type-id-5' size-in-bits='64' id='type-id-273'/>
    <!-- _jmethodID* -->
    <pointer-type-def type-id='type-id-6' size-in-bits='64' id='type-id-271'/>
    <!-- _jobject* -->
    <pointer-type-def type-id='type-id-7' size-in-bits='64' id='type-id-268'/>
    <!-- char* -->
    <pointer-type-def type-id='type-id-1' size-in-bits='64' id='type-id-297'/>
    <!-- const JNIInvokeInterface_ -->
    <qualified-type-def type-id='type-id-298' const='yes' id='type-id-311'/>
    <!-- const JNIInvokeInterface_* -->
    <pointer-type-def type-id='type-id-311' size-in-bits='64' id='type-id-302'/>
    <!-- const JNINativeInterface_ -->
    <qualified-type-def type-id='type-id-47' const='yes' id='type-id-312'/>
    <!-- const JNINativeInterface_* -->
    <pointer-type-def type-id='type-id-312' size-in-bits='64' id='type-id-264'/>
    <!-- const JNINativeMethod -->
    <qualified-type-def type-id='type-id-296' const='yes' id='type-id-313'/>
    <!-- const JNINativeMethod* -->
    <pointer-type-def type-id='type-id-313' size-in-bits='64' id='type-id-314'/>
    <!-- const char -->
    <qualified-type-def type-id='type-id-1' const='yes' id='type-id-315'/>
    <!-- const char* -->
    <pointer-type-def type-id='type-id-315' size-in-bits='64' id='type-id-27'/>
    <!-- const char* (JNIEnv*, typedef jstring, jboolean*)* -->
    <pointer-type-def type-id='type-id-316' size-in-bits='64' id='type-id-202'/>
    <!-- const char** -->
    <pointer-type-def type-id='type-id-27' size-in-bits='64' id='type-id-39'/>
    <!-- const int -->
    <qualified-type-def type-id='type-id-10' const='yes' id='type-id-317'/>
    <!-- const int* -->
    <pointer-type-def type-id='type-id-317' size-in-bits='64' id='type-id-318'/>
    <!-- const int** -->
    <pointer-type-def type-id='type-id-318' size-in-bits='64' id='type-id-38'/>
    <!-- const jboolean -->
    <qualified-type-def type-id='type-id-275' const='yes' id='type-id-319'/>
    <!-- const jboolean* -->
    <pointer-type-def type-id='type-id-319' size-in-bits='64' id='type-id-320'/>
    <!-- const jbyte -->
    <qualified-type-def type-id='type-id-269' const='yes' id='type-id-321'/>
    <!-- const jbyte* -->
    <pointer-type-def type-id='type-id-321' size-in-bits='64' id='type-id-322'/>
    <!-- const jchar -->
    <qualified-type-def type-id='type-id-279' const='yes' id='type-id-323'/>
    <!-- const jchar* -->
    <pointer-type-def type-id='type-id-323' size-in-bits='64' id='type-id-324'/>
    <!-- const jchar* (JNIEnv*, typedef jstring, jboolean*)* -->
    <pointer-type-def type-id='type-id-325' size-in-bits='64' id='type-id-199'/>
    <!-- const jdouble -->
    <qualified-type-def type-id='type-id-283' const='yes' id='type-id-326'/>
    <!-- const jdouble* -->
    <pointer-type-def type-id='type-id-326' size-in-bits='64' id='type-id-327'/>
    <!-- const jfloat -->
    <qualified-type-def type-id='type-id-282' const='yes' id='type-id-328'/>
    <!-- const jfloat* -->
    <pointer-type-def type-id='type-id-328' size-in-bits='64' id='type-id-329'/>
    <!-- const jint -->
    <qualified-type-def type-id='type-id-263' const='yes' id='type-id-330'/>
    <!-- const jint* -->
    <pointer-type-def type-id='type-id-330' size-in-bits='64' id='type-id-331'/>
    <!-- const jlong -->
    <qualified-type-def type-id='type-id-281' const='yes' id='type-id-332'/>
    <!-- const jlong* -->
    <pointer-type-def type-id='type-id-332' size-in-bits='64' id='type-id-333'/>
    <!-- const jshort -->
    <qualified-type-def type-id='type-id-280' const='yes' id='type-id-334'/>
    <!-- const jshort* -->
    <pointer-type-def type-id='type-id-334' size-in-bits='64' id='type-id-335'/>
    <!-- const jvalue -->
    <qualified-type-def type-id='type-id-278' const='yes' id='type-id-336'/>
    <!-- const jvalue* -->
    <pointer-type-def type-id='type-id-336' size-in-bits='64' id='type-id-337'/>
    <!-- const lttng_ust_event_desc -->
    <qualified-type-def type-id='type-id-35' const='yes' id='type-id-338'/>
    <!-- const lttng_ust_event_desc* -->
    <pointer-type-def type-id='type-id-338' size-in-bits='64' id='type-id-339'/>
    <!-- const lttng_ust_event_desc* const -->
    <qualified-type-def type-id='type-id-339' const='yes' id='type-id-340'/>
    <!-- const lttng_ust_event_desc* const* -->
    <pointer-type-def type-id='type-id-340' size-in-bits='64' id='type-id-34'/>
    <!-- const lttng_ust_event_field -->
    <qualified-type-def type-id='type-id-43' const='yes' id='type-id-341'/>
    <!-- const lttng_ust_event_field* -->
    <pointer-type-def type-id='type-id-341' size-in-bits='64' id='type-id-342'/>
    <!-- const lttng_ust_event_field* const -->
    <qualified-type-def type-id='type-id-342' const='yes' id='type-id-343'/>
    <!-- const lttng_ust_event_field* const* -->
    <pointer-type-def type-id='type-id-343' size-in-bits='64' id='type-id-41'/>
    <!-- const lttng_ust_probe_desc -->
    <qualified-type-def type-id='type-id-33' const='yes' id='type-id-344'/>
    <!-- const lttng_ust_probe_desc* -->
    <pointer-type-def type-id='type-id-344' size-in-bits='64' id='type-id-36'/>
    <!-- const lttng_ust_tracepoint_class -->
    <qualified-type-def type-id='type-id-40' const='yes' id='type-id-345'/>
    <!-- const lttng_ust_tracepoint_class* -->
    <pointer-type-def type-id='type-id-345' size-in-bits='64' id='type-id-37'/>
    <!-- const lttng_ust_type_common -->
    <qualified-type-def type-id='type-id-45' const='yes' id='type-id-346'/>
    <!-- const lttng_ust_type_common* -->
    <pointer-type-def type-id='type-id-346' size-in-bits='64' id='type-id-44'/>
    <!-- int ()* -->
    <pointer-type-def type-id='type-id-347' size-in-bits='64' id='type-id-32'/>
    <!-- int (lttng_ust_tracepoint* const*)* -->
    <pointer-type-def type-id='type-id-348' size-in-bits='64' id='type-id-22'/>
    <!-- int (lttng_ust_tracepoint* const*, int)* -->
    <pointer-type-def type-id='type-id-349' size-in-bits='64' id='type-id-21'/>
    <!-- int* -->
    <pointer-type-def type-id='type-id-10' size-in-bits='64' id='type-id-29'/>
    <!-- jboolean* -->
    <pointer-type-def type-id='type-id-275' size-in-bits='64' id='type-id-350'/>
    <!-- jboolean* (JNIEnv*, typedef jbooleanArray, jboolean*)* -->
    <pointer-type-def type-id='type-id-351' size-in-bits='64' id='type-id-216'/>
    <!-- jbyte* -->
    <pointer-type-def type-id='type-id-269' size-in-bits='64' id='type-id-352'/>
    <!-- jbyte* (JNIEnv*, typedef jbyteArray, jboolean*)* -->
    <pointer-type-def type-id='type-id-353' size-in-bits='64' id='type-id-217'/>
    <!-- jchar* -->
    <pointer-type-def type-id='type-id-279' size-in-bits='64' id='type-id-354'/>
    <!-- jchar* (JNIEnv*, typedef jcharArray, jboolean*)* -->
    <pointer-type-def type-id='type-id-355' size-in-bits='64' id='type-id-218'/>
    <!-- jdouble* -->
    <pointer-type-def type-id='type-id-283' size-in-bits='64' id='type-id-356'/>
    <!-- jdouble* (JNIEnv*, typedef jdoubleArray, jboolean*)* -->
    <pointer-type-def type-id='type-id-357' size-in-bits='64' id='type-id-223'/>
    <!-- jfloat* -->
    <pointer-type-def type-id='type-id-282' size-in-bits='64' id='type-id-358'/>
    <!-- jfloat* (JNIEnv*, typedef jfloatArray, jboolean*)* -->
    <pointer-type-def type-id='type-id-359' size-in-bits='64' id='type-id-222'/>
    <!-- jint* -->
    <pointer-type-def type-id='type-id-263' size-in-bits='64' id='type-id-360'/>
    <!-- jint* (JNIEnv*, typedef jintArray, jboolean*)* -->
    <pointer-type-def type-id='type-id-361' size-in-bits='64' id='type-id-220'/>
    <!-- jlong* -->
    <pointer-type-def type-id='type-id-281' size-in-bits='64' id='type-id-362'/>
    <!-- jlong* (JNIEnv*, typedef jlongArray, jboolean*)* -->
    <pointer-type-def type-id='type-id-363' size-in-bits='64' id='type-id-221'/>
    <!-- jshort* -->
    <pointer-type-def type-id='type-id-280' size-in-bits='64' id='type-id-364'/>
    <!-- jshort* (JNIEnv*, typedef jshortArray, jboolean*)* -->
    <pointer-type-def type-id='type-id-365' size-in-bits='64' id='type-id-219'/>
    <!-- lttng_ust_tracepoint* -->
    <pointer-type-def type-id='type-id-26' size-in-bits='64' id='type-id-366'/>
    <!-- lttng_ust_tracepoint* const -->
    <qualified-type-def type-id='type-id-366' const='yes' id='type-id-367'/>
    <!-- lttng_ust_tracepoint* const* -->
    <pointer-type-def type-id='type-id-367' size-in-bits='64' id='type-id-368'/>
    <!-- lttng_ust_tracepoint_destructors_syms* -->
    <pointer-type-def type-id='type-id-31' size-in-bits='64' id='type-id-369'/>
    <!-- lttng_ust_tracepoint_dlopen* -->
    <pointer-type-def type-id='type-id-19' size-in-bits='64' id='type-id-370'/>
    <!-- lttng_ust_tracepoint_probe* -->
    <pointer-type-def type-id='type-id-30' size-in-bits='64' id='type-id-28'/>
    <!-- typedef jboolean (JNIEnv*)* -->
    <pointer-type-def type-id='type-id-371' size-in-bits='64' id='type-id-258'/>
    <!-- typedef jboolean (JNIEnv*, typedef jclass, typedef jclass)* -->
    <pointer-type-def type-id='type-id-372' size-in-bits='64' id='type-id-55'/>
    <!-- typedef jboolean (JNIEnv*, typedef jclass, typedef jfieldID)* -->
    <pointer-type-def type-id='type-id-373' size-in-bits='64' id='type-id-180'/>
    <!-- typedef jboolean (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-374' size-in-bits='64' id='type-id-153'/>
    <!-- typedef jboolean (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-375' size-in-bits='64' id='type-id-154'/>
    <!-- typedef jboolean (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-376' size-in-bits='64' id='type-id-152'/>
    <!-- typedef jboolean (JNIEnv*, typedef jobject, typedef jclass)* -->
    <pointer-type-def type-id='type-id-377' size-in-bits='64' id='type-id-71'/>
    <!-- typedef jboolean (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-378' size-in-bits='64' id='type-id-107'/>
    <!-- typedef jboolean (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-379' size-in-bits='64' id='type-id-108'/>
    <!-- typedef jboolean (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-380' size-in-bits='64' id='type-id-106'/>
    <!-- typedef jboolean (JNIEnv*, typedef jobject, typedef jfieldID)* -->
    <pointer-type-def type-id='type-id-381' size-in-bits='64' id='type-id-135'/>
    <!-- typedef jboolean (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-382' size-in-bits='64' id='type-id-77'/>
    <!-- typedef jboolean (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-383' size-in-bits='64' id='type-id-78'/>
    <!-- typedef jboolean (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-384' size-in-bits='64' id='type-id-76'/>
    <!-- typedef jboolean (JNIEnv*, typedef jobject, typedef jobject)* -->
    <pointer-type-def type-id='type-id-385' size-in-bits='64' id='type-id-65'/>
    <!-- typedef jbooleanArray (JNIEnv*, typedef jsize)* -->
    <pointer-type-def type-id='type-id-386' size-in-bits='64' id='type-id-208'/>
    <!-- typedef jbyte (JNIEnv*, typedef jclass, typedef jfieldID)* -->
    <pointer-type-def type-id='type-id-387' size-in-bits='64' id='type-id-181'/>
    <!-- typedef jbyte (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-388' size-in-bits='64' id='type-id-156'/>
    <!-- typedef jbyte (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-389' size-in-bits='64' id='type-id-157'/>
    <!-- typedef jbyte (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-390' size-in-bits='64' id='type-id-155'/>
    <!-- typedef jbyte (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-391' size-in-bits='64' id='type-id-110'/>
    <!-- typedef jbyte (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-392' size-in-bits='64' id='type-id-111'/>
    <!-- typedef jbyte (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-393' size-in-bits='64' id='type-id-109'/>
    <!-- typedef jbyte (JNIEnv*, typedef jobject, typedef jfieldID)* -->
    <pointer-type-def type-id='type-id-394' size-in-bits='64' id='type-id-136'/>
    <!-- typedef jbyte (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-395' size-in-bits='64' id='type-id-80'/>
    <!-- typedef jbyte (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-396' size-in-bits='64' id='type-id-81'/>
    <!-- typedef jbyte (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-397' size-in-bits='64' id='type-id-79'/>
    <!-- typedef jbyteArray (JNIEnv*, typedef jsize)* -->
    <pointer-type-def type-id='type-id-398' size-in-bits='64' id='type-id-209'/>
    <!-- typedef jchar (JNIEnv*, typedef jclass, typedef jfieldID)* -->
    <pointer-type-def type-id='type-id-399' size-in-bits='64' id='type-id-182'/>
    <!-- typedef jchar (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-400' size-in-bits='64' id='type-id-159'/>
    <!-- typedef jchar (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-401' size-in-bits='64' id='type-id-160'/>
    <!-- typedef jchar (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-402' size-in-bits='64' id='type-id-158'/>
    <!-- typedef jchar (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-403' size-in-bits='64' id='type-id-113'/>
    <!-- typedef jchar (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-404' size-in-bits='64' id='type-id-114'/>
    <!-- typedef jchar (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-405' size-in-bits='64' id='type-id-112'/>
    <!-- typedef jchar (JNIEnv*, typedef jobject, typedef jfieldID)* -->
    <pointer-type-def type-id='type-id-406' size-in-bits='64' id='type-id-137'/>
    <!-- typedef jchar (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-407' size-in-bits='64' id='type-id-83'/>
    <!-- typedef jchar (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-408' size-in-bits='64' id='type-id-84'/>
    <!-- typedef jchar (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-409' size-in-bits='64' id='type-id-82'/>
    <!-- typedef jcharArray (JNIEnv*, typedef jsize)* -->
    <pointer-type-def type-id='type-id-410' size-in-bits='64' id='type-id-210'/>
    <!-- typedef jclass (JNIEnv*, const char*)* -->
    <pointer-type-def type-id='type-id-411' size-in-bits='64' id='type-id-50'/>
    <!-- typedef jclass (JNIEnv*, const char*, typedef jobject, const jbyte*, typedef jsize)* -->
    <pointer-type-def type-id='type-id-412' size-in-bits='64' id='type-id-49'/>
    <!-- typedef jclass (JNIEnv*, typedef jclass)* -->
    <pointer-type-def type-id='type-id-413' size-in-bits='64' id='type-id-54'/>
    <!-- typedef jclass (JNIEnv*, typedef jobject)* -->
    <pointer-type-def type-id='type-id-414' size-in-bits='64' id='type-id-70'/>
    <!-- typedef jdouble (JNIEnv*, typedef jclass, typedef jfieldID)* -->
    <pointer-type-def type-id='type-id-415' size-in-bits='64' id='type-id-187'/>
    <!-- typedef jdouble (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-416' size-in-bits='64' id='type-id-174'/>
    <!-- typedef jdouble (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-417' size-in-bits='64' id='type-id-175'/>
    <!-- typedef jdouble (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-418' size-in-bits='64' id='type-id-173'/>
    <!-- typedef jdouble (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-419' size-in-bits='64' id='type-id-128'/>
    <!-- typedef jdouble (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-420' size-in-bits='64' id='type-id-129'/>
    <!-- typedef jdouble (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-421' size-in-bits='64' id='type-id-127'/>
    <!-- typedef jdouble (JNIEnv*, typedef jobject, typedef jfieldID)* -->
    <pointer-type-def type-id='type-id-422' size-in-bits='64' id='type-id-142'/>
    <!-- typedef jdouble (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-423' size-in-bits='64' id='type-id-98'/>
    <!-- typedef jdouble (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-424' size-in-bits='64' id='type-id-99'/>
    <!-- typedef jdouble (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-425' size-in-bits='64' id='type-id-97'/>
    <!-- typedef jdoubleArray (JNIEnv*, typedef jsize)* -->
    <pointer-type-def type-id='type-id-426' size-in-bits='64' id='type-id-215'/>
    <!-- typedef jfieldID (JNIEnv*, typedef jclass, const char*, const char*)* -->
    <pointer-type-def type-id='type-id-427' size-in-bits='64' id='type-id-133'/>
    <!-- typedef jfieldID (JNIEnv*, typedef jobject)* -->
    <pointer-type-def type-id='type-id-428' size-in-bits='64' id='type-id-52'/>
    <!-- typedef jfloat (JNIEnv*, typedef jclass, typedef jfieldID)* -->
    <pointer-type-def type-id='type-id-429' size-in-bits='64' id='type-id-186'/>
    <!-- typedef jfloat (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-430' size-in-bits='64' id='type-id-171'/>
    <!-- typedef jfloat (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-431' size-in-bits='64' id='type-id-172'/>
    <!-- typedef jfloat (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-432' size-in-bits='64' id='type-id-170'/>
    <!-- typedef jfloat (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-433' size-in-bits='64' id='type-id-125'/>
    <!-- typedef jfloat (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-434' size-in-bits='64' id='type-id-126'/>
    <!-- typedef jfloat (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-435' size-in-bits='64' id='type-id-124'/>
    <!-- typedef jfloat (JNIEnv*, typedef jobject, typedef jfieldID)* -->
    <pointer-type-def type-id='type-id-436' size-in-bits='64' id='type-id-141'/>
    <!-- typedef jfloat (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-437' size-in-bits='64' id='type-id-95'/>
    <!-- typedef jfloat (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-438' size-in-bits='64' id='type-id-96'/>
    <!-- typedef jfloat (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-439' size-in-bits='64' id='type-id-94'/>
    <!-- typedef jfloatArray (JNIEnv*, typedef jsize)* -->
    <pointer-type-def type-id='type-id-440' size-in-bits='64' id='type-id-214'/>
    <!-- typedef jint (JNIEnv*)* -->
    <pointer-type-def type-id='type-id-441' size-in-bits='64' id='type-id-48'/>
    <!-- typedef jint (JNIEnv*, JavaVM**)* -->
    <pointer-type-def type-id='type-id-442' size-in-bits='64' id='type-id-251'/>
    <!-- typedef jint (JNIEnv*, typedef jclass)* -->
    <pointer-type-def type-id='type-id-443' size-in-bits='64' id='type-id-249'/>
    <!-- typedef jint (JNIEnv*, typedef jclass, const JNINativeMethod*, typedef jint)* -->
    <pointer-type-def type-id='type-id-444' size-in-bits='64' id='type-id-248'/>
    <!-- typedef jint (JNIEnv*, typedef jclass, const char*)* -->
    <pointer-type-def type-id='type-id-445' size-in-bits='64' id='type-id-58'/>
    <!-- typedef jint (JNIEnv*, typedef jclass, typedef jfieldID)* -->
    <pointer-type-def type-id='type-id-446' size-in-bits='64' id='type-id-184'/>
    <!-- typedef jint (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-447' size-in-bits='64' id='type-id-165'/>
    <!-- typedef jint (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-448' size-in-bits='64' id='type-id-166'/>
    <!-- typedef jint (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-449' size-in-bits='64' id='type-id-164'/>
    <!-- typedef jint (JNIEnv*, typedef jint)* -->
    <pointer-type-def type-id='type-id-450' size-in-bits='64' id='type-id-62'/>
    <!-- typedef jint (JNIEnv*, typedef jobject)* -->
    <pointer-type-def type-id='type-id-451' size-in-bits='64' id='type-id-250'/>
    <!-- typedef jint (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-452' size-in-bits='64' id='type-id-119'/>
    <!-- typedef jint (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-453' size-in-bits='64' id='type-id-120'/>
    <!-- typedef jint (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-454' size-in-bits='64' id='type-id-118'/>
    <!-- typedef jint (JNIEnv*, typedef jobject, typedef jfieldID)* -->
    <pointer-type-def type-id='type-id-455' size-in-bits='64' id='type-id-139'/>
    <!-- typedef jint (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-456' size-in-bits='64' id='type-id-89'/>
    <!-- typedef jint (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-457' size-in-bits='64' id='type-id-90'/>
    <!-- typedef jint (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-458' size-in-bits='64' id='type-id-88'/>
    <!-- typedef jint (JNIEnv*, typedef jthrowable)* -->
    <pointer-type-def type-id='type-id-459' size-in-bits='64' id='type-id-57'/>
    <!-- typedef jint (JavaVM*)* -->
    <pointer-type-def type-id='type-id-460' size-in-bits='64' id='type-id-299'/>
    <!-- typedef jint (JavaVM*, void**, typedef jint)* -->
    <pointer-type-def type-id='type-id-461' size-in-bits='64' id='type-id-301'/>
    <!-- typedef jint (JavaVM*, void**, void*)* -->
    <pointer-type-def type-id='type-id-462' size-in-bits='64' id='type-id-300'/>
    <!-- typedef jintArray (JNIEnv*, typedef jsize)* -->
    <pointer-type-def type-id='type-id-463' size-in-bits='64' id='type-id-212'/>
    <!-- typedef jlong (JNIEnv*, typedef jclass, typedef jfieldID)* -->
    <pointer-type-def type-id='type-id-464' size-in-bits='64' id='type-id-185'/>
    <!-- typedef jlong (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-465' size-in-bits='64' id='type-id-168'/>
    <!-- typedef jlong (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-466' size-in-bits='64' id='type-id-169'/>
    <!-- typedef jlong (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-467' size-in-bits='64' id='type-id-167'/>
    <!-- typedef jlong (JNIEnv*, typedef jobject)* -->
    <pointer-type-def type-id='type-id-468' size-in-bits='64' id='type-id-261'/>
    <!-- typedef jlong (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-469' size-in-bits='64' id='type-id-122'/>
    <!-- typedef jlong (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-470' size-in-bits='64' id='type-id-123'/>
    <!-- typedef jlong (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-471' size-in-bits='64' id='type-id-121'/>
    <!-- typedef jlong (JNIEnv*, typedef jobject, typedef jfieldID)* -->
    <pointer-type-def type-id='type-id-472' size-in-bits='64' id='type-id-140'/>
    <!-- typedef jlong (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-473' size-in-bits='64' id='type-id-92'/>
    <!-- typedef jlong (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-474' size-in-bits='64' id='type-id-93'/>
    <!-- typedef jlong (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-475' size-in-bits='64' id='type-id-91'/>
    <!-- typedef jlongArray (JNIEnv*, typedef jsize)* -->
    <pointer-type-def type-id='type-id-476' size-in-bits='64' id='type-id-213'/>
    <!-- typedef jmethodID (JNIEnv*, typedef jclass, const char*, const char*)* -->
    <pointer-type-def type-id='type-id-477' size-in-bits='64' id='type-id-72'/>
    <!-- typedef jmethodID (JNIEnv*, typedef jobject)* -->
    <pointer-type-def type-id='type-id-478' size-in-bits='64' id='type-id-51'/>
    <!-- typedef jobject (JNIEnv*, typedef jclass)* -->
    <pointer-type-def type-id='type-id-479' size-in-bits='64' id='type-id-66'/>
    <!-- typedef jobject (JNIEnv*, typedef jclass, typedef jfieldID)* -->
    <pointer-type-def type-id='type-id-480' size-in-bits='64' id='type-id-179'/>
    <!-- typedef jobject (JNIEnv*, typedef jclass, typedef jfieldID, typedef jboolean)* -->
    <pointer-type-def type-id='type-id-481' size-in-bits='64' id='type-id-56'/>
    <!-- typedef jobject (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-482' size-in-bits='64' id='type-id-68'/>
    <!-- typedef jobject (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-483' size-in-bits='64' id='type-id-69'/>
    <!-- typedef jobject (JNIEnv*, typedef jclass, typedef jmethodID, typedef jboolean)* -->
    <pointer-type-def type-id='type-id-484' size-in-bits='64' id='type-id-53'/>
    <!-- typedef jobject (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-485' size-in-bits='64' id='type-id-67'/>
    <!-- typedef jobject (JNIEnv*, typedef jobject)* -->
    <pointer-type-def type-id='type-id-486' size-in-bits='64' id='type-id-63'/>
    <!-- typedef jobject (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-487' size-in-bits='64' id='type-id-104'/>
    <!-- typedef jobject (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-488' size-in-bits='64' id='type-id-105'/>
    <!-- typedef jobject (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-489' size-in-bits='64' id='type-id-103'/>
    <!-- typedef jobject (JNIEnv*, typedef jobject, typedef jfieldID)* -->
    <pointer-type-def type-id='type-id-490' size-in-bits='64' id='type-id-134'/>
    <!-- typedef jobject (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-491' size-in-bits='64' id='type-id-74'/>
    <!-- typedef jobject (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-492' size-in-bits='64' id='type-id-75'/>
    <!-- typedef jobject (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-493' size-in-bits='64' id='type-id-73'/>
    <!-- typedef jobject (JNIEnv*, typedef jobjectArray, typedef jsize)* -->
    <pointer-type-def type-id='type-id-494' size-in-bits='64' id='type-id-206'/>
    <!-- typedef jobject (JNIEnv*, void*, typedef jlong)* -->
    <pointer-type-def type-id='type-id-495' size-in-bits='64' id='type-id-259'/>
    <!-- typedef jobjectArray (JNIEnv*, typedef jsize, typedef jclass, typedef jobject)* -->
    <pointer-type-def type-id='type-id-496' size-in-bits='64' id='type-id-205'/>
    <!-- typedef jobjectRefType (JNIEnv*, typedef jobject)* -->
    <pointer-type-def type-id='type-id-497' size-in-bits='64' id='type-id-262'/>
    <!-- typedef jshort (JNIEnv*, typedef jclass, typedef jfieldID)* -->
    <pointer-type-def type-id='type-id-498' size-in-bits='64' id='type-id-183'/>
    <!-- typedef jshort (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-499' size-in-bits='64' id='type-id-162'/>
    <!-- typedef jshort (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-500' size-in-bits='64' id='type-id-163'/>
    <!-- typedef jshort (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-501' size-in-bits='64' id='type-id-161'/>
    <!-- typedef jshort (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-502' size-in-bits='64' id='type-id-116'/>
    <!-- typedef jshort (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-503' size-in-bits='64' id='type-id-117'/>
    <!-- typedef jshort (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-504' size-in-bits='64' id='type-id-115'/>
    <!-- typedef jshort (JNIEnv*, typedef jobject, typedef jfieldID)* -->
    <pointer-type-def type-id='type-id-505' size-in-bits='64' id='type-id-138'/>
    <!-- typedef jshort (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-506' size-in-bits='64' id='type-id-86'/>
    <!-- typedef jshort (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-507' size-in-bits='64' id='type-id-87'/>
    <!-- typedef jshort (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-508' size-in-bits='64' id='type-id-85'/>
    <!-- typedef jshortArray (JNIEnv*, typedef jsize)* -->
    <pointer-type-def type-id='type-id-509' size-in-bits='64' id='type-id-211'/>
    <!-- typedef jsize (JNIEnv*, typedef jarray)* -->
    <pointer-type-def type-id='type-id-510' size-in-bits='64' id='type-id-204'/>
    <!-- typedef jsize (JNIEnv*, typedef jstring)* -->
    <pointer-type-def type-id='type-id-511' size-in-bits='64' id='type-id-198'/>
    <!-- typedef jstring (JNIEnv*, const char*)* -->
    <pointer-type-def type-id='type-id-512' size-in-bits='64' id='type-id-201'/>
    <!-- typedef jstring (JNIEnv*, const jchar*, typedef jsize)* -->
    <pointer-type-def type-id='type-id-513' size-in-bits='64' id='type-id-197'/>
    <!-- typedef jthrowable (JNIEnv*)* -->
    <pointer-type-def type-id='type-id-514' size-in-bits='64' id='type-id-59'/>
    <!-- typedef jweak (JNIEnv*, typedef jobject)* -->
    <pointer-type-def type-id='type-id-515' size-in-bits='64' id='type-id-256'/>
    <!-- void ()* -->
    <pointer-type-def type-id='type-id-516' size-in-bits='64' id='type-id-23'/>
    <!-- void (JNIEnv*)* -->
    <pointer-type-def type-id='type-id-517' size-in-bits='64' id='type-id-60'/>
    <!-- void (JNIEnv*, const char*)* -->
    <pointer-type-def type-id='type-id-518' size-in-bits='64' id='type-id-61'/>
    <!-- void (JNIEnv*, typedef jarray, void*, typedef jint)* -->
    <pointer-type-def type-id='type-id-519' size-in-bits='64' id='type-id-255'/>
    <!-- void (JNIEnv*, typedef jbooleanArray, jboolean*, typedef jint)* -->
    <pointer-type-def type-id='type-id-520' size-in-bits='64' id='type-id-224'/>
    <!-- void (JNIEnv*, typedef jbooleanArray, typedef jsize, typedef jsize, const jboolean*)* -->
    <pointer-type-def type-id='type-id-521' size-in-bits='64' id='type-id-240'/>
    <!-- void (JNIEnv*, typedef jbooleanArray, typedef jsize, typedef jsize, jboolean*)* -->
    <pointer-type-def type-id='type-id-522' size-in-bits='64' id='type-id-232'/>
    <!-- void (JNIEnv*, typedef jbyteArray, jbyte*, typedef jint)* -->
    <pointer-type-def type-id='type-id-523' size-in-bits='64' id='type-id-225'/>
    <!-- void (JNIEnv*, typedef jbyteArray, typedef jsize, typedef jsize, const jbyte*)* -->
    <pointer-type-def type-id='type-id-524' size-in-bits='64' id='type-id-241'/>
    <!-- void (JNIEnv*, typedef jbyteArray, typedef jsize, typedef jsize, jbyte*)* -->
    <pointer-type-def type-id='type-id-525' size-in-bits='64' id='type-id-233'/>
    <!-- void (JNIEnv*, typedef jcharArray, jchar*, typedef jint)* -->
    <pointer-type-def type-id='type-id-526' size-in-bits='64' id='type-id-226'/>
    <!-- void (JNIEnv*, typedef jcharArray, typedef jsize, typedef jsize, const jchar*)* -->
    <pointer-type-def type-id='type-id-527' size-in-bits='64' id='type-id-242'/>
    <!-- void (JNIEnv*, typedef jcharArray, typedef jsize, typedef jsize, jchar*)* -->
    <pointer-type-def type-id='type-id-528' size-in-bits='64' id='type-id-234'/>
    <!-- void (JNIEnv*, typedef jclass, typedef jfieldID, typedef jboolean)* -->
    <pointer-type-def type-id='type-id-529' size-in-bits='64' id='type-id-189'/>
    <!-- void (JNIEnv*, typedef jclass, typedef jfieldID, typedef jbyte)* -->
    <pointer-type-def type-id='type-id-530' size-in-bits='64' id='type-id-190'/>
    <!-- void (JNIEnv*, typedef jclass, typedef jfieldID, typedef jchar)* -->
    <pointer-type-def type-id='type-id-531' size-in-bits='64' id='type-id-191'/>
    <!-- void (JNIEnv*, typedef jclass, typedef jfieldID, typedef jdouble)* -->
    <pointer-type-def type-id='type-id-532' size-in-bits='64' id='type-id-196'/>
    <!-- void (JNIEnv*, typedef jclass, typedef jfieldID, typedef jfloat)* -->
    <pointer-type-def type-id='type-id-533' size-in-bits='64' id='type-id-195'/>
    <!-- void (JNIEnv*, typedef jclass, typedef jfieldID, typedef jint)* -->
    <pointer-type-def type-id='type-id-534' size-in-bits='64' id='type-id-193'/>
    <!-- void (JNIEnv*, typedef jclass, typedef jfieldID, typedef jlong)* -->
    <pointer-type-def type-id='type-id-535' size-in-bits='64' id='type-id-194'/>
    <!-- void (JNIEnv*, typedef jclass, typedef jfieldID, typedef jobject)* -->
    <pointer-type-def type-id='type-id-536' size-in-bits='64' id='type-id-188'/>
    <!-- void (JNIEnv*, typedef jclass, typedef jfieldID, typedef jshort)* -->
    <pointer-type-def type-id='type-id-537' size-in-bits='64' id='type-id-192'/>
    <!-- void (JNIEnv*, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-538' size-in-bits='64' id='type-id-177'/>
    <!-- void (JNIEnv*, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-539' size-in-bits='64' id='type-id-178'/>
    <!-- void (JNIEnv*, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-540' size-in-bits='64' id='type-id-176'/>
    <!-- void (JNIEnv*, typedef jdoubleArray, jdouble*, typedef jint)* -->
    <pointer-type-def type-id='type-id-541' size-in-bits='64' id='type-id-231'/>
    <!-- void (JNIEnv*, typedef jdoubleArray, typedef jsize, typedef jsize, const jdouble*)* -->
    <pointer-type-def type-id='type-id-542' size-in-bits='64' id='type-id-247'/>
    <!-- void (JNIEnv*, typedef jdoubleArray, typedef jsize, typedef jsize, jdouble*)* -->
    <pointer-type-def type-id='type-id-543' size-in-bits='64' id='type-id-239'/>
    <!-- void (JNIEnv*, typedef jfloatArray, jfloat*, typedef jint)* -->
    <pointer-type-def type-id='type-id-544' size-in-bits='64' id='type-id-230'/>
    <!-- void (JNIEnv*, typedef jfloatArray, typedef jsize, typedef jsize, const jfloat*)* -->
    <pointer-type-def type-id='type-id-545' size-in-bits='64' id='type-id-246'/>
    <!-- void (JNIEnv*, typedef jfloatArray, typedef jsize, typedef jsize, jfloat*)* -->
    <pointer-type-def type-id='type-id-546' size-in-bits='64' id='type-id-238'/>
    <!-- void (JNIEnv*, typedef jintArray, jint*, typedef jint)* -->
    <pointer-type-def type-id='type-id-547' size-in-bits='64' id='type-id-228'/>
    <!-- void (JNIEnv*, typedef jintArray, typedef jsize, typedef jsize, const jint*)* -->
    <pointer-type-def type-id='type-id-548' size-in-bits='64' id='type-id-244'/>
    <!-- void (JNIEnv*, typedef jintArray, typedef jsize, typedef jsize, jint*)* -->
    <pointer-type-def type-id='type-id-549' size-in-bits='64' id='type-id-236'/>
    <!-- void (JNIEnv*, typedef jlongArray, jlong*, typedef jint)* -->
    <pointer-type-def type-id='type-id-550' size-in-bits='64' id='type-id-229'/>
    <!-- void (JNIEnv*, typedef jlongArray, typedef jsize, typedef jsize, const jlong*)* -->
    <pointer-type-def type-id='type-id-551' size-in-bits='64' id='type-id-245'/>
    <!-- void (JNIEnv*, typedef jlongArray, typedef jsize, typedef jsize, jlong*)* -->
    <pointer-type-def type-id='type-id-552' size-in-bits='64' id='type-id-237'/>
    <!-- void (JNIEnv*, typedef jobject)* -->
    <pointer-type-def type-id='type-id-553' size-in-bits='64' id='type-id-64'/>
    <!-- void (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-554' size-in-bits='64' id='type-id-131'/>
    <!-- void (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-555' size-in-bits='64' id='type-id-132'/>
    <!-- void (JNIEnv*, typedef jobject, typedef jclass, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-556' size-in-bits='64' id='type-id-130'/>
    <!-- void (JNIEnv*, typedef jobject, typedef jfieldID, typedef jboolean)* -->
    <pointer-type-def type-id='type-id-557' size-in-bits='64' id='type-id-144'/>
    <!-- void (JNIEnv*, typedef jobject, typedef jfieldID, typedef jbyte)* -->
    <pointer-type-def type-id='type-id-558' size-in-bits='64' id='type-id-145'/>
    <!-- void (JNIEnv*, typedef jobject, typedef jfieldID, typedef jchar)* -->
    <pointer-type-def type-id='type-id-559' size-in-bits='64' id='type-id-146'/>
    <!-- void (JNIEnv*, typedef jobject, typedef jfieldID, typedef jdouble)* -->
    <pointer-type-def type-id='type-id-560' size-in-bits='64' id='type-id-151'/>
    <!-- void (JNIEnv*, typedef jobject, typedef jfieldID, typedef jfloat)* -->
    <pointer-type-def type-id='type-id-561' size-in-bits='64' id='type-id-150'/>
    <!-- void (JNIEnv*, typedef jobject, typedef jfieldID, typedef jint)* -->
    <pointer-type-def type-id='type-id-562' size-in-bits='64' id='type-id-148'/>
    <!-- void (JNIEnv*, typedef jobject, typedef jfieldID, typedef jlong)* -->
    <pointer-type-def type-id='type-id-563' size-in-bits='64' id='type-id-149'/>
    <!-- void (JNIEnv*, typedef jobject, typedef jfieldID, typedef jobject)* -->
    <pointer-type-def type-id='type-id-564' size-in-bits='64' id='type-id-143'/>
    <!-- void (JNIEnv*, typedef jobject, typedef jfieldID, typedef jshort)* -->
    <pointer-type-def type-id='type-id-565' size-in-bits='64' id='type-id-147'/>
    <!-- void (JNIEnv*, typedef jobject, typedef jmethodID, __va_list_tag*)* -->
    <pointer-type-def type-id='type-id-566' size-in-bits='64' id='type-id-101'/>
    <!-- void (JNIEnv*, typedef jobject, typedef jmethodID, const jvalue*)* -->
    <pointer-type-def type-id='type-id-567' size-in-bits='64' id='type-id-102'/>
    <!-- void (JNIEnv*, typedef jobject, typedef jmethodID, variadic parameter type)* -->
    <pointer-type-def type-id='type-id-568' size-in-bits='64' id='type-id-100'/>
    <!-- void (JNIEnv*, typedef jobjectArray, typedef jsize, typedef jobject)* -->
    <pointer-type-def type-id='type-id-569' size-in-bits='64' id='type-id-207'/>
    <!-- void (JNIEnv*, typedef jshortArray, jshort*, typedef jint)* -->
    <pointer-type-def type-id='type-id-570' size-in-bits='64' id='type-id-227'/>
    <!-- void (JNIEnv*, typedef jshortArray, typedef jsize, typedef jsize, const jshort*)* -->
    <pointer-type-def type-id='type-id-571' size-in-bits='64' id='type-id-243'/>
    <!-- void (JNIEnv*, typedef jshortArray, typedef jsize, typedef jsize, jshort*)* -->
    <pointer-type-def type-id='type-id-572' size-in-bits='64' id='type-id-235'/>
    <!-- void (JNIEnv*, typedef jstring, const char*)* -->
    <pointer-type-def type-id='type-id-573' size-in-bits='64' id='type-id-203'/>
    <!-- void (JNIEnv*, typedef jstring, const jchar*)* -->
    <pointer-type-def type-id='type-id-574' size-in-bits='64' id='type-id-200'/>
    <!-- void (JNIEnv*, typedef jstring, typedef jsize, typedef jsize, char*)* -->
    <pointer-type-def type-id='type-id-575' size-in-bits='64' id='type-id-253'/>
    <!-- void (JNIEnv*, typedef jstring, typedef jsize, typedef jsize, jchar*)* -->
    <pointer-type-def type-id='type-id-576' size-in-bits='64' id='type-id-252'/>
    <!-- void (JNIEnv*, typedef jweak)* -->
    <pointer-type-def type-id='type-id-577' size-in-bits='64' id='type-id-257'/>
    <!-- void* -->
    <pointer-type-def type-id='type-id-18' size-in-bits='64' id='type-id-4'/>
    <!-- void* (JNIEnv*, typedef jarray, jboolean*)* -->
    <pointer-type-def type-id='type-id-578' size-in-bits='64' id='type-id-254'/>
    <!-- void* (JNIEnv*, typedef jobject)* -->
    <pointer-type-def type-id='type-id-579' size-in-bits='64' id='type-id-260'/>
    <!-- void* (void*)* -->
    <pointer-type-def type-id='type-id-580' size-in-bits='64' id='type-id-24'/>
    <!-- void** -->
    <pointer-type-def type-id='type-id-4' size-in-bits='64' id='type-id-581'/>
    <!-- lttng_ust_tracepoint_dlopen lttng_ust_tracepoint_dlopen -->
    <var-decl name='lttng_ust_tracepoint_dlopen' type-id='type-id-19' visibility='default' filepath='../../../include/lttng/tracepoint.h' line='278' column='1'/>
    <!-- lttng_ust_tracepoint_dlopen* lttng_ust_tracepoint_dlopen_ptr -->
    <var-decl name='lttng_ust_tracepoint_dlopen_ptr' type-id='type-id-370' visibility='default' filepath='../../../include/lttng/tracepoint.h' line='279' column='1'/>
    <!-- lttng_ust_tracepoint_destructors_syms lttng_ust_tracepoint_destructors_syms -->
    <var-decl name='lttng_ust_tracepoint_destructors_syms' type-id='type-id-31' visibility='default' filepath='../../../include/lttng/tracepoint.h' line='329' column='1'/>
    <!-- lttng_ust_tracepoint_destructors_syms* lttng_ust_tracepoint_destructors_syms_ptr -->
    <var-decl name='lttng_ust_tracepoint_destructors_syms_ptr' type-id='type-id-369' visibility='default' filepath='../../../include/lttng/tracepoint.h' line='330' column='1'/>
    <!-- lttng_ust_tracepoint lttng_ust_tracepoint_lttng_ust_java___int_event -->
    <var-decl name='lttng_ust_tracepoint_lttng_ust_java___int_event' type-id='type-id-26' visibility='default' filepath='src/lib/lttng-ust-java/lttng_ust_java.h' line='15' column='1'/>
    <!-- lttng_ust_tracepoint lttng_ust_tracepoint_lttng_ust_java___int_int_event -->
    <var-decl name='lttng_ust_tracepoint_lttng_ust_java___int_int_event' type-id='type-id-26' visibility='default' filepath='src/lib/lttng-ust-java/lttng_ust_java.h' line='23' column='1'/>
    <!-- lttng_ust_tracepoint lttng_ust_tracepoint_lttng_ust_java___long_event -->
    <var-decl name='lttng_ust_tracepoint_lttng_ust_java___long_event' type-id='type-id-26' visibility='default' filepath='src/lib/lttng-ust-java/lttng_ust_java.h' line='32' column='1'/>
    <!-- lttng_ust_tracepoint lttng_ust_tracepoint_lttng_ust_java___long_long_event -->
    <var-decl name='lttng_ust_tracepoint_lttng_ust_java___long_long_event' type-id='type-id-26' visibility='default' filepath='src/lib/lttng-ust-java/lttng_ust_java.h' line='40' column='1'/>
    <!-- lttng_ust_tracepoint lttng_ust_tracepoint_lttng_ust_java___string_event -->
    <var-decl name='lttng_ust_tracepoint_lttng_ust_java___string_event' type-id='type-id-26' visibility='default' filepath='src/lib/lttng-ust-java/lttng_ust_java.h' line='49' column='1'/>
    <!-- const lttng_ust_probe_desc lttng_ust__probe_desc___lttng_ust_java -->
    <var-decl name='lttng_ust__probe_desc___lttng_ust_java' type-id='type-id-344' visibility='default' filepath='../../../include/lttng/ust-tracepoint-event.h' line='342' column='1'/>
    <!-- int lttng_ust_tracepoint_provider_lttng_ust_java -->
    <var-decl name='lttng_ust_tracepoint_provider_lttng_ust_java' type-id='type-id-10' visibility='default' filepath='src/lib/lttng-ust-java/lttng_ust_java.h' line='15' column='1'/>
    <!-- void Java_org_lttng_ust_LTTngUst_tracepointString(JNIEnv*, jobject, jstring, jstring) -->
    <function-decl name='Java_org_lttng_ust_LTTngUst_tracepointString' mangled-name='Java_org_lttng_ust_LTTngUst_tracepointString' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='71' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='Java_org_lttng_ust_LTTngUst_tracepointString'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307' name='env' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='71' column='1'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266' name='jobj' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='72' column='1'/>
      <!-- parameter of type 'typedef jstring' -->
      <parameter type-id='type-id-284' name='ev_name' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='73' column='1'/>
      <!-- parameter of type 'typedef jstring' -->
      <parameter type-id='type-id-284' name='payload' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='74' column='1'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void Java_org_lttng_ust_LTTngUst_tracepointLongLong(JNIEnv*, jobject, jstring, jlong, jlong) -->
    <function-decl name='Java_org_lttng_ust_LTTngUst_tracepointLongLong' mangled-name='Java_org_lttng_ust_LTTngUst_tracepointLongLong' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='57' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='Java_org_lttng_ust_LTTngUst_tracepointLongLong'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307' name='env' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='57' column='1'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266' name='jobj' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='58' column='1'/>
      <!-- parameter of type 'typedef jstring' -->
      <parameter type-id='type-id-284' name='ev_name' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='59' column='1'/>
      <!-- parameter of type 'typedef jlong' -->
      <parameter type-id='type-id-281' name='payload1' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='60' column='1'/>
      <!-- parameter of type 'typedef jlong' -->
      <parameter type-id='type-id-281' name='payload2' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='61' column='1'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void Java_org_lttng_ust_LTTngUst_tracepointLong(JNIEnv*, jobject, jstring, jlong) -->
    <function-decl name='Java_org_lttng_ust_LTTngUst_tracepointLong' mangled-name='Java_org_lttng_ust_LTTngUst_tracepointLong' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='44' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='Java_org_lttng_ust_LTTngUst_tracepointLong'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307' name='env' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='44' column='1'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266' name='jobj' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='45' column='1'/>
      <!-- parameter of type 'typedef jstring' -->
      <parameter type-id='type-id-284' name='ev_name' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='46' column='1'/>
      <!-- parameter of type 'typedef jlong' -->
      <parameter type-id='type-id-281' name='payload' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='47' column='1'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void Java_org_lttng_ust_LTTngUst_tracepointIntInt(JNIEnv*, jobject, jstring, jint, jint) -->
    <function-decl name='Java_org_lttng_ust_LTTngUst_tracepointIntInt' mangled-name='Java_org_lttng_ust_LTTngUst_tracepointIntInt' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='30' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='Java_org_lttng_ust_LTTngUst_tracepointIntInt'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307' name='env' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='30' column='1'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266' name='jobj' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='31' column='1'/>
      <!-- parameter of type 'typedef jstring' -->
      <parameter type-id='type-id-284' name='ev_name' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='32' column='1'/>
      <!-- parameter of type 'typedef jint' -->
      <parameter type-id='type-id-263' name='payload1' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='33' column='1'/>
      <!-- parameter of type 'typedef jint' -->
      <parameter type-id='type-id-263' name='payload2' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='34' column='1'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void Java_org_lttng_ust_LTTngUst_tracepointInt(JNIEnv*, jobject, jstring, jint) -->
    <function-decl name='Java_org_lttng_ust_LTTngUst_tracepointInt' mangled-name='Java_org_lttng_ust_LTTngUst_tracepointInt' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='17' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='Java_org_lttng_ust_LTTngUst_tracepointInt'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307' name='env' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='17' column='1'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266' name='jobj' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='18' column='1'/>
      <!-- parameter of type 'typedef jstring' -->
      <parameter type-id='type-id-284' name='ev_name' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='19' column='1'/>
      <!-- parameter of type 'typedef jint' -->
      <parameter type-id='type-id-263' name='payload' filepath='src/lib/lttng-ust-java/LTTngUst.c' line='20' column='1'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- const char* (JNIEnv*, jstring, jboolean*) -->
    <function-type size-in-bits='64' id='type-id-316'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jstring' -->
      <parameter type-id='type-id-284'/>
      <!-- parameter of type 'jboolean*' -->
      <parameter type-id='type-id-350'/>
      <!-- const char* -->
      <return type-id='type-id-27'/>
    </function-type>
    <!-- const jchar* (JNIEnv*, jstring, jboolean*) -->
    <function-type size-in-bits='64' id='type-id-325'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jstring' -->
      <parameter type-id='type-id-284'/>
      <!-- parameter of type 'jboolean*' -->
      <parameter type-id='type-id-350'/>
      <!-- const jchar* -->
      <return type-id='type-id-324'/>
    </function-type>
    <!-- int () -->
    <function-type size-in-bits='64' id='type-id-347'>
      <!-- int -->
      <return type-id='type-id-10'/>
    </function-type>
    <!-- int (lttng_ust_tracepoint* const*) -->
    <function-type size-in-bits='64' id='type-id-348'>
      <!-- parameter of type 'lttng_ust_tracepoint* const*' -->
      <parameter type-id='type-id-368'/>
      <!-- int -->
      <return type-id='type-id-10'/>
    </function-type>
    <!-- int (lttng_ust_tracepoint* const*, int) -->
    <function-type size-in-bits='64' id='type-id-349'>
      <!-- parameter of type 'lttng_ust_tracepoint* const*' -->
      <parameter type-id='type-id-368'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-10'/>
      <!-- int -->
      <return type-id='type-id-10'/>
    </function-type>
    <!-- jboolean* (JNIEnv*, jbooleanArray, jboolean*) -->
    <function-type size-in-bits='64' id='type-id-351'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jbooleanArray' -->
      <parameter type-id='type-id-287'/>
      <!-- parameter of type 'jboolean*' -->
      <parameter type-id='type-id-350'/>
      <!-- jboolean* -->
      <return type-id='type-id-350'/>
    </function-type>
    <!-- jbyte* (JNIEnv*, jbyteArray, jboolean*) -->
    <function-type size-in-bits='64' id='type-id-353'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jbyteArray' -->
      <parameter type-id='type-id-288'/>
      <!-- parameter of type 'jboolean*' -->
      <parameter type-id='type-id-350'/>
      <!-- jbyte* -->
      <return type-id='type-id-352'/>
    </function-type>
    <!-- jchar* (JNIEnv*, jcharArray, jboolean*) -->
    <function-type size-in-bits='64' id='type-id-355'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jcharArray' -->
      <parameter type-id='type-id-289'/>
      <!-- parameter of type 'jboolean*' -->
      <parameter type-id='type-id-350'/>
      <!-- jchar* -->
      <return type-id='type-id-354'/>
    </function-type>
    <!-- jdouble* (JNIEnv*, jdoubleArray, jboolean*) -->
    <function-type size-in-bits='64' id='type-id-357'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jdoubleArray' -->
      <parameter type-id='type-id-294'/>
      <!-- parameter of type 'jboolean*' -->
      <parameter type-id='type-id-350'/>
      <!-- jdouble* -->
      <return type-id='type-id-356'/>
    </function-type>
    <!-- jfloat* (JNIEnv*, jfloatArray, jboolean*) -->
    <function-type size-in-bits='64' id='type-id-359'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jfloatArray' -->
      <parameter type-id='type-id-293'/>
      <!-- parameter of type 'jboolean*' -->
      <parameter type-id='type-id-350'/>
      <!-- jfloat* -->
      <return type-id='type-id-358'/>
    </function-type>
    <!-- jint* (JNIEnv*, jintArray, jboolean*) -->
    <function-type size-in-bits='64' id='type-id-361'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jintArray' -->
      <parameter type-id='type-id-291'/>
      <!-- parameter of type 'jboolean*' -->
      <parameter type-id='type-id-350'/>
      <!-- jint* -->
      <return type-id='type-id-360'/>
    </function-type>
    <!-- jlong* (JNIEnv*, jlongArray, jboolean*) -->
    <function-type size-in-bits='64' id='type-id-363'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jlongArray' -->
      <parameter type-id='type-id-292'/>
      <!-- parameter of type 'jboolean*' -->
      <parameter type-id='type-id-350'/>
      <!-- jlong* -->
      <return type-id='type-id-362'/>
    </function-type>
    <!-- jshort* (JNIEnv*, jshortArray, jboolean*) -->
    <function-type size-in-bits='64' id='type-id-365'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jshortArray' -->
      <parameter type-id='type-id-290'/>
      <!-- parameter of type 'jboolean*' -->
      <parameter type-id='type-id-350'/>
      <!-- jshort* -->
      <return type-id='type-id-364'/>
    </function-type>
    <!-- jboolean (JNIEnv*) -->
    <function-type size-in-bits='64' id='type-id-371'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- typedef jboolean -->
      <return type-id='type-id-275'/>
    </function-type>
    <!-- jboolean (JNIEnv*, jclass, jclass) -->
    <function-type size-in-bits='64' id='type-id-372'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- typedef jboolean -->
      <return type-id='type-id-275'/>
    </function-type>
    <!-- jboolean (JNIEnv*, jclass, jfieldID) -->
    <function-type size-in-bits='64' id='type-id-373'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- typedef jboolean -->
      <return type-id='type-id-275'/>
    </function-type>
    <!-- jboolean (JNIEnv*, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-374'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jboolean -->
      <return type-id='type-id-275'/>
    </function-type>
    <!-- jboolean (JNIEnv*, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-375'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jboolean -->
      <return type-id='type-id-275'/>
    </function-type>
    <!-- jboolean (JNIEnv*, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-376'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jboolean -->
      <return type-id='type-id-275'/>
    </function-type>
    <!-- jboolean (JNIEnv*, jobject, jclass) -->
    <function-type size-in-bits='64' id='type-id-377'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- typedef jboolean -->
      <return type-id='type-id-275'/>
    </function-type>
    <!-- jboolean (JNIEnv*, jobject, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-378'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jboolean -->
      <return type-id='type-id-275'/>
    </function-type>
    <!-- jboolean (JNIEnv*, jobject, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-379'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jboolean -->
      <return type-id='type-id-275'/>
    </function-type>
    <!-- jboolean (JNIEnv*, jobject, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-380'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jboolean -->
      <return type-id='type-id-275'/>
    </function-type>
    <!-- jboolean (JNIEnv*, jobject, jfieldID) -->
    <function-type size-in-bits='64' id='type-id-381'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- typedef jboolean -->
      <return type-id='type-id-275'/>
    </function-type>
    <!-- jboolean (JNIEnv*, jobject, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-382'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jboolean -->
      <return type-id='type-id-275'/>
    </function-type>
    <!-- jboolean (JNIEnv*, jobject, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-383'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jboolean -->
      <return type-id='type-id-275'/>
    </function-type>
    <!-- jboolean (JNIEnv*, jobject, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-384'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jboolean -->
      <return type-id='type-id-275'/>
    </function-type>
    <!-- jboolean (JNIEnv*, jobject, jobject) -->
    <function-type size-in-bits='64' id='type-id-385'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- typedef jboolean -->
      <return type-id='type-id-275'/>
    </function-type>
    <!-- jbooleanArray (JNIEnv*, jsize) -->
    <function-type size-in-bits='64' id='type-id-386'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- typedef jbooleanArray -->
      <return type-id='type-id-287'/>
    </function-type>
    <!-- jbyte (JNIEnv*, jclass, jfieldID) -->
    <function-type size-in-bits='64' id='type-id-387'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- typedef jbyte -->
      <return type-id='type-id-269'/>
    </function-type>
    <!-- jbyte (JNIEnv*, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-388'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jbyte -->
      <return type-id='type-id-269'/>
    </function-type>
    <!-- jbyte (JNIEnv*, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-389'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jbyte -->
      <return type-id='type-id-269'/>
    </function-type>
    <!-- jbyte (JNIEnv*, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-390'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jbyte -->
      <return type-id='type-id-269'/>
    </function-type>
    <!-- jbyte (JNIEnv*, jobject, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-391'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jbyte -->
      <return type-id='type-id-269'/>
    </function-type>
    <!-- jbyte (JNIEnv*, jobject, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-392'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jbyte -->
      <return type-id='type-id-269'/>
    </function-type>
    <!-- jbyte (JNIEnv*, jobject, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-393'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jbyte -->
      <return type-id='type-id-269'/>
    </function-type>
    <!-- jbyte (JNIEnv*, jobject, jfieldID) -->
    <function-type size-in-bits='64' id='type-id-394'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- typedef jbyte -->
      <return type-id='type-id-269'/>
    </function-type>
    <!-- jbyte (JNIEnv*, jobject, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-395'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jbyte -->
      <return type-id='type-id-269'/>
    </function-type>
    <!-- jbyte (JNIEnv*, jobject, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-396'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jbyte -->
      <return type-id='type-id-269'/>
    </function-type>
    <!-- jbyte (JNIEnv*, jobject, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-397'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jbyte -->
      <return type-id='type-id-269'/>
    </function-type>
    <!-- jbyteArray (JNIEnv*, jsize) -->
    <function-type size-in-bits='64' id='type-id-398'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- typedef jbyteArray -->
      <return type-id='type-id-288'/>
    </function-type>
    <!-- jchar (JNIEnv*, jclass, jfieldID) -->
    <function-type size-in-bits='64' id='type-id-399'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- typedef jchar -->
      <return type-id='type-id-279'/>
    </function-type>
    <!-- jchar (JNIEnv*, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-400'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jchar -->
      <return type-id='type-id-279'/>
    </function-type>
    <!-- jchar (JNIEnv*, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-401'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jchar -->
      <return type-id='type-id-279'/>
    </function-type>
    <!-- jchar (JNIEnv*, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-402'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jchar -->
      <return type-id='type-id-279'/>
    </function-type>
    <!-- jchar (JNIEnv*, jobject, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-403'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jchar -->
      <return type-id='type-id-279'/>
    </function-type>
    <!-- jchar (JNIEnv*, jobject, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-404'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jchar -->
      <return type-id='type-id-279'/>
    </function-type>
    <!-- jchar (JNIEnv*, jobject, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-405'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jchar -->
      <return type-id='type-id-279'/>
    </function-type>
    <!-- jchar (JNIEnv*, jobject, jfieldID) -->
    <function-type size-in-bits='64' id='type-id-406'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- typedef jchar -->
      <return type-id='type-id-279'/>
    </function-type>
    <!-- jchar (JNIEnv*, jobject, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-407'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jchar -->
      <return type-id='type-id-279'/>
    </function-type>
    <!-- jchar (JNIEnv*, jobject, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-408'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jchar -->
      <return type-id='type-id-279'/>
    </function-type>
    <!-- jchar (JNIEnv*, jobject, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-409'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jchar -->
      <return type-id='type-id-279'/>
    </function-type>
    <!-- jcharArray (JNIEnv*, jsize) -->
    <function-type size-in-bits='64' id='type-id-410'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- typedef jcharArray -->
      <return type-id='type-id-289'/>
    </function-type>
    <!-- jclass (JNIEnv*, const char*) -->
    <function-type size-in-bits='64' id='type-id-411'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-27'/>
      <!-- typedef jclass -->
      <return type-id='type-id-267'/>
    </function-type>
    <!-- jclass (JNIEnv*, const char*, jobject, const jbyte*, jsize) -->
    <function-type size-in-bits='64' id='type-id-412'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-27'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'const jbyte*' -->
      <parameter type-id='type-id-322'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- typedef jclass -->
      <return type-id='type-id-267'/>
    </function-type>
    <!-- jclass (JNIEnv*, jclass) -->
    <function-type size-in-bits='64' id='type-id-413'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- typedef jclass -->
      <return type-id='type-id-267'/>
    </function-type>
    <!-- jclass (JNIEnv*, jobject) -->
    <function-type size-in-bits='64' id='type-id-414'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- typedef jclass -->
      <return type-id='type-id-267'/>
    </function-type>
    <!-- jdouble (JNIEnv*, jclass, jfieldID) -->
    <function-type size-in-bits='64' id='type-id-415'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- typedef jdouble -->
      <return type-id='type-id-283'/>
    </function-type>
    <!-- jdouble (JNIEnv*, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-416'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jdouble -->
      <return type-id='type-id-283'/>
    </function-type>
    <!-- jdouble (JNIEnv*, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-417'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jdouble -->
      <return type-id='type-id-283'/>
    </function-type>
    <!-- jdouble (JNIEnv*, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-418'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jdouble -->
      <return type-id='type-id-283'/>
    </function-type>
    <!-- jdouble (JNIEnv*, jobject, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-419'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jdouble -->
      <return type-id='type-id-283'/>
    </function-type>
    <!-- jdouble (JNIEnv*, jobject, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-420'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jdouble -->
      <return type-id='type-id-283'/>
    </function-type>
    <!-- jdouble (JNIEnv*, jobject, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-421'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jdouble -->
      <return type-id='type-id-283'/>
    </function-type>
    <!-- jdouble (JNIEnv*, jobject, jfieldID) -->
    <function-type size-in-bits='64' id='type-id-422'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- typedef jdouble -->
      <return type-id='type-id-283'/>
    </function-type>
    <!-- jdouble (JNIEnv*, jobject, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-423'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jdouble -->
      <return type-id='type-id-283'/>
    </function-type>
    <!-- jdouble (JNIEnv*, jobject, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-424'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jdouble -->
      <return type-id='type-id-283'/>
    </function-type>
    <!-- jdouble (JNIEnv*, jobject, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-425'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jdouble -->
      <return type-id='type-id-283'/>
    </function-type>
    <!-- jdoubleArray (JNIEnv*, jsize) -->
    <function-type size-in-bits='64' id='type-id-426'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- typedef jdoubleArray -->
      <return type-id='type-id-294'/>
    </function-type>
    <!-- jfieldID (JNIEnv*, jclass, const char*, const char*) -->
    <function-type size-in-bits='64' id='type-id-427'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-27'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-27'/>
      <!-- typedef jfieldID -->
      <return type-id='type-id-274'/>
    </function-type>
    <!-- jfieldID (JNIEnv*, jobject) -->
    <function-type size-in-bits='64' id='type-id-428'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- typedef jfieldID -->
      <return type-id='type-id-274'/>
    </function-type>
    <!-- jfloat (JNIEnv*, jclass, jfieldID) -->
    <function-type size-in-bits='64' id='type-id-429'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- typedef jfloat -->
      <return type-id='type-id-282'/>
    </function-type>
    <!-- jfloat (JNIEnv*, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-430'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jfloat -->
      <return type-id='type-id-282'/>
    </function-type>
    <!-- jfloat (JNIEnv*, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-431'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jfloat -->
      <return type-id='type-id-282'/>
    </function-type>
    <!-- jfloat (JNIEnv*, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-432'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jfloat -->
      <return type-id='type-id-282'/>
    </function-type>
    <!-- jfloat (JNIEnv*, jobject, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-433'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jfloat -->
      <return type-id='type-id-282'/>
    </function-type>
    <!-- jfloat (JNIEnv*, jobject, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-434'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jfloat -->
      <return type-id='type-id-282'/>
    </function-type>
    <!-- jfloat (JNIEnv*, jobject, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-435'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jfloat -->
      <return type-id='type-id-282'/>
    </function-type>
    <!-- jfloat (JNIEnv*, jobject, jfieldID) -->
    <function-type size-in-bits='64' id='type-id-436'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- typedef jfloat -->
      <return type-id='type-id-282'/>
    </function-type>
    <!-- jfloat (JNIEnv*, jobject, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-437'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jfloat -->
      <return type-id='type-id-282'/>
    </function-type>
    <!-- jfloat (JNIEnv*, jobject, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-438'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jfloat -->
      <return type-id='type-id-282'/>
    </function-type>
    <!-- jfloat (JNIEnv*, jobject, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-439'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jfloat -->
      <return type-id='type-id-282'/>
    </function-type>
    <!-- jfloatArray (JNIEnv*, jsize) -->
    <function-type size-in-bits='64' id='type-id-440'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- typedef jfloatArray -->
      <return type-id='type-id-293'/>
    </function-type>
    <!-- jint (JNIEnv*) -->
    <function-type size-in-bits='64' id='type-id-441'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JNIEnv*, JavaVM**) -->
    <function-type size-in-bits='64' id='type-id-442'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'JavaVM**' -->
      <parameter type-id='type-id-309'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JNIEnv*, jclass) -->
    <function-type size-in-bits='64' id='type-id-443'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JNIEnv*, jclass, const JNINativeMethod*, jint) -->
    <function-type size-in-bits='64' id='type-id-444'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'const JNINativeMethod*' -->
      <parameter type-id='type-id-314'/>
      <!-- parameter of type 'typedef jint' -->
      <parameter type-id='type-id-263'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JNIEnv*, jclass, const char*) -->
    <function-type size-in-bits='64' id='type-id-445'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-27'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JNIEnv*, jclass, jfieldID) -->
    <function-type size-in-bits='64' id='type-id-446'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JNIEnv*, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-447'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JNIEnv*, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-448'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JNIEnv*, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-449'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JNIEnv*, jint) -->
    <function-type size-in-bits='64' id='type-id-450'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jint' -->
      <parameter type-id='type-id-263'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JNIEnv*, jobject) -->
    <function-type size-in-bits='64' id='type-id-451'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JNIEnv*, jobject, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-452'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JNIEnv*, jobject, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-453'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JNIEnv*, jobject, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-454'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JNIEnv*, jobject, jfieldID) -->
    <function-type size-in-bits='64' id='type-id-455'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JNIEnv*, jobject, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-456'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JNIEnv*, jobject, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-457'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JNIEnv*, jobject, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-458'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JNIEnv*, jthrowable) -->
    <function-type size-in-bits='64' id='type-id-459'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jthrowable' -->
      <parameter type-id='type-id-276'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JavaVM*) -->
    <function-type size-in-bits='64' id='type-id-460'>
      <!-- parameter of type 'JavaVM*' -->
      <parameter type-id='type-id-308'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JavaVM*, void**, jint) -->
    <function-type size-in-bits='64' id='type-id-461'>
      <!-- parameter of type 'JavaVM*' -->
      <parameter type-id='type-id-308'/>
      <!-- parameter of type 'void**' -->
      <parameter type-id='type-id-581'/>
      <!-- parameter of type 'typedef jint' -->
      <parameter type-id='type-id-263'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jint (JavaVM*, void**, void*) -->
    <function-type size-in-bits='64' id='type-id-462'>
      <!-- parameter of type 'JavaVM*' -->
      <parameter type-id='type-id-308'/>
      <!-- parameter of type 'void**' -->
      <parameter type-id='type-id-581'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-4'/>
      <!-- typedef jint -->
      <return type-id='type-id-263'/>
    </function-type>
    <!-- jintArray (JNIEnv*, jsize) -->
    <function-type size-in-bits='64' id='type-id-463'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- typedef jintArray -->
      <return type-id='type-id-291'/>
    </function-type>
    <!-- jlong (JNIEnv*, jclass, jfieldID) -->
    <function-type size-in-bits='64' id='type-id-464'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- typedef jlong -->
      <return type-id='type-id-281'/>
    </function-type>
    <!-- jlong (JNIEnv*, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-465'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jlong -->
      <return type-id='type-id-281'/>
    </function-type>
    <!-- jlong (JNIEnv*, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-466'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jlong -->
      <return type-id='type-id-281'/>
    </function-type>
    <!-- jlong (JNIEnv*, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-467'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jlong -->
      <return type-id='type-id-281'/>
    </function-type>
    <!-- jlong (JNIEnv*, jobject) -->
    <function-type size-in-bits='64' id='type-id-468'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- typedef jlong -->
      <return type-id='type-id-281'/>
    </function-type>
    <!-- jlong (JNIEnv*, jobject, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-469'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jlong -->
      <return type-id='type-id-281'/>
    </function-type>
    <!-- jlong (JNIEnv*, jobject, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-470'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jlong -->
      <return type-id='type-id-281'/>
    </function-type>
    <!-- jlong (JNIEnv*, jobject, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-471'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jlong -->
      <return type-id='type-id-281'/>
    </function-type>
    <!-- jlong (JNIEnv*, jobject, jfieldID) -->
    <function-type size-in-bits='64' id='type-id-472'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- typedef jlong -->
      <return type-id='type-id-281'/>
    </function-type>
    <!-- jlong (JNIEnv*, jobject, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-473'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jlong -->
      <return type-id='type-id-281'/>
    </function-type>
    <!-- jlong (JNIEnv*, jobject, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-474'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jlong -->
      <return type-id='type-id-281'/>
    </function-type>
    <!-- jlong (JNIEnv*, jobject, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-475'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jlong -->
      <return type-id='type-id-281'/>
    </function-type>
    <!-- jlongArray (JNIEnv*, jsize) -->
    <function-type size-in-bits='64' id='type-id-476'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- typedef jlongArray -->
      <return type-id='type-id-292'/>
    </function-type>
    <!-- jmethodID (JNIEnv*, jclass, const char*, const char*) -->
    <function-type size-in-bits='64' id='type-id-477'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-27'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-27'/>
      <!-- typedef jmethodID -->
      <return type-id='type-id-272'/>
    </function-type>
    <!-- jmethodID (JNIEnv*, jobject) -->
    <function-type size-in-bits='64' id='type-id-478'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- typedef jmethodID -->
      <return type-id='type-id-272'/>
    </function-type>
    <!-- jobject (JNIEnv*, jclass) -->
    <function-type size-in-bits='64' id='type-id-479'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- typedef jobject -->
      <return type-id='type-id-266'/>
    </function-type>
    <!-- jobject (JNIEnv*, jclass, jfieldID) -->
    <function-type size-in-bits='64' id='type-id-480'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- typedef jobject -->
      <return type-id='type-id-266'/>
    </function-type>
    <!-- jobject (JNIEnv*, jclass, jfieldID, jboolean) -->
    <function-type size-in-bits='64' id='type-id-481'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- parameter of type 'typedef jboolean' -->
      <parameter type-id='type-id-275'/>
      <!-- typedef jobject -->
      <return type-id='type-id-266'/>
    </function-type>
    <!-- jobject (JNIEnv*, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-482'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jobject -->
      <return type-id='type-id-266'/>
    </function-type>
    <!-- jobject (JNIEnv*, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-483'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jobject -->
      <return type-id='type-id-266'/>
    </function-type>
    <!-- jobject (JNIEnv*, jclass, jmethodID, jboolean) -->
    <function-type size-in-bits='64' id='type-id-484'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'typedef jboolean' -->
      <parameter type-id='type-id-275'/>
      <!-- typedef jobject -->
      <return type-id='type-id-266'/>
    </function-type>
    <!-- jobject (JNIEnv*, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-485'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jobject -->
      <return type-id='type-id-266'/>
    </function-type>
    <!-- jobject (JNIEnv*, jobject) -->
    <function-type size-in-bits='64' id='type-id-486'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- typedef jobject -->
      <return type-id='type-id-266'/>
    </function-type>
    <!-- jobject (JNIEnv*, jobject, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-487'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jobject -->
      <return type-id='type-id-266'/>
    </function-type>
    <!-- jobject (JNIEnv*, jobject, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-488'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jobject -->
      <return type-id='type-id-266'/>
    </function-type>
    <!-- jobject (JNIEnv*, jobject, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-489'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jobject -->
      <return type-id='type-id-266'/>
    </function-type>
    <!-- jobject (JNIEnv*, jobject, jfieldID) -->
    <function-type size-in-bits='64' id='type-id-490'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- typedef jobject -->
      <return type-id='type-id-266'/>
    </function-type>
    <!-- jobject (JNIEnv*, jobject, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-491'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jobject -->
      <return type-id='type-id-266'/>
    </function-type>
    <!-- jobject (JNIEnv*, jobject, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-492'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jobject -->
      <return type-id='type-id-266'/>
    </function-type>
    <!-- jobject (JNIEnv*, jobject, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-493'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jobject -->
      <return type-id='type-id-266'/>
    </function-type>
    <!-- jobject (JNIEnv*, jobjectArray, jsize) -->
    <function-type size-in-bits='64' id='type-id-494'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobjectArray' -->
      <parameter type-id='type-id-286'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- typedef jobject -->
      <return type-id='type-id-266'/>
    </function-type>
    <!-- jobject (JNIEnv*, void*, jlong) -->
    <function-type size-in-bits='64' id='type-id-495'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-4'/>
      <!-- parameter of type 'typedef jlong' -->
      <parameter type-id='type-id-281'/>
      <!-- typedef jobject -->
      <return type-id='type-id-266'/>
    </function-type>
    <!-- jobjectArray (JNIEnv*, jsize, jclass, jobject) -->
    <function-type size-in-bits='64' id='type-id-496'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- typedef jobjectArray -->
      <return type-id='type-id-286'/>
    </function-type>
    <!-- jobjectRefType (JNIEnv*, jobject) -->
    <function-type size-in-bits='64' id='type-id-497'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- typedef jobjectRefType -->
      <return type-id='type-id-306'/>
    </function-type>
    <!-- jshort (JNIEnv*, jclass, jfieldID) -->
    <function-type size-in-bits='64' id='type-id-498'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- typedef jshort -->
      <return type-id='type-id-280'/>
    </function-type>
    <!-- jshort (JNIEnv*, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-499'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jshort -->
      <return type-id='type-id-280'/>
    </function-type>
    <!-- jshort (JNIEnv*, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-500'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jshort -->
      <return type-id='type-id-280'/>
    </function-type>
    <!-- jshort (JNIEnv*, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-501'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jshort -->
      <return type-id='type-id-280'/>
    </function-type>
    <!-- jshort (JNIEnv*, jobject, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-502'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jshort -->
      <return type-id='type-id-280'/>
    </function-type>
    <!-- jshort (JNIEnv*, jobject, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-503'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jshort -->
      <return type-id='type-id-280'/>
    </function-type>
    <!-- jshort (JNIEnv*, jobject, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-504'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jshort -->
      <return type-id='type-id-280'/>
    </function-type>
    <!-- jshort (JNIEnv*, jobject, jfieldID) -->
    <function-type size-in-bits='64' id='type-id-505'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- typedef jshort -->
      <return type-id='type-id-280'/>
    </function-type>
    <!-- jshort (JNIEnv*, jobject, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-506'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- typedef jshort -->
      <return type-id='type-id-280'/>
    </function-type>
    <!-- jshort (JNIEnv*, jobject, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-507'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- typedef jshort -->
      <return type-id='type-id-280'/>
    </function-type>
    <!-- jshort (JNIEnv*, jobject, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-508'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- typedef jshort -->
      <return type-id='type-id-280'/>
    </function-type>
    <!-- jshortArray (JNIEnv*, jsize) -->
    <function-type size-in-bits='64' id='type-id-509'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- typedef jshortArray -->
      <return type-id='type-id-290'/>
    </function-type>
    <!-- jsize (JNIEnv*, jarray) -->
    <function-type size-in-bits='64' id='type-id-510'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jarray' -->
      <parameter type-id='type-id-285'/>
      <!-- typedef jsize -->
      <return type-id='type-id-270'/>
    </function-type>
    <!-- jsize (JNIEnv*, jstring) -->
    <function-type size-in-bits='64' id='type-id-511'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jstring' -->
      <parameter type-id='type-id-284'/>
      <!-- typedef jsize -->
      <return type-id='type-id-270'/>
    </function-type>
    <!-- jstring (JNIEnv*, const char*) -->
    <function-type size-in-bits='64' id='type-id-512'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-27'/>
      <!-- typedef jstring -->
      <return type-id='type-id-284'/>
    </function-type>
    <!-- jstring (JNIEnv*, const jchar*, jsize) -->
    <function-type size-in-bits='64' id='type-id-513'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'const jchar*' -->
      <parameter type-id='type-id-324'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- typedef jstring -->
      <return type-id='type-id-284'/>
    </function-type>
    <!-- jthrowable (JNIEnv*) -->
    <function-type size-in-bits='64' id='type-id-514'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- typedef jthrowable -->
      <return type-id='type-id-276'/>
    </function-type>
    <!-- jweak (JNIEnv*, jobject) -->
    <function-type size-in-bits='64' id='type-id-515'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- typedef jweak -->
      <return type-id='type-id-304'/>
    </function-type>
    <!-- void () -->
    <function-type size-in-bits='64' id='type-id-516'>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*) -->
    <function-type size-in-bits='64' id='type-id-517'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, const char*) -->
    <function-type size-in-bits='64' id='type-id-518'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-27'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jarray, void*, jint) -->
    <function-type size-in-bits='64' id='type-id-519'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jarray' -->
      <parameter type-id='type-id-285'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-4'/>
      <!-- parameter of type 'typedef jint' -->
      <parameter type-id='type-id-263'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jbooleanArray, jboolean*, jint) -->
    <function-type size-in-bits='64' id='type-id-520'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jbooleanArray' -->
      <parameter type-id='type-id-287'/>
      <!-- parameter of type 'jboolean*' -->
      <parameter type-id='type-id-350'/>
      <!-- parameter of type 'typedef jint' -->
      <parameter type-id='type-id-263'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jbooleanArray, jsize, jsize, const jboolean*) -->
    <function-type size-in-bits='64' id='type-id-521'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jbooleanArray' -->
      <parameter type-id='type-id-287'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'const jboolean*' -->
      <parameter type-id='type-id-320'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jbooleanArray, jsize, jsize, jboolean*) -->
    <function-type size-in-bits='64' id='type-id-522'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jbooleanArray' -->
      <parameter type-id='type-id-287'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'jboolean*' -->
      <parameter type-id='type-id-350'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jbyteArray, jbyte*, jint) -->
    <function-type size-in-bits='64' id='type-id-523'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jbyteArray' -->
      <parameter type-id='type-id-288'/>
      <!-- parameter of type 'jbyte*' -->
      <parameter type-id='type-id-352'/>
      <!-- parameter of type 'typedef jint' -->
      <parameter type-id='type-id-263'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jbyteArray, jsize, jsize, const jbyte*) -->
    <function-type size-in-bits='64' id='type-id-524'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jbyteArray' -->
      <parameter type-id='type-id-288'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'const jbyte*' -->
      <parameter type-id='type-id-322'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jbyteArray, jsize, jsize, jbyte*) -->
    <function-type size-in-bits='64' id='type-id-525'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jbyteArray' -->
      <parameter type-id='type-id-288'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'jbyte*' -->
      <parameter type-id='type-id-352'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jcharArray, jchar*, jint) -->
    <function-type size-in-bits='64' id='type-id-526'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jcharArray' -->
      <parameter type-id='type-id-289'/>
      <!-- parameter of type 'jchar*' -->
      <parameter type-id='type-id-354'/>
      <!-- parameter of type 'typedef jint' -->
      <parameter type-id='type-id-263'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jcharArray, jsize, jsize, const jchar*) -->
    <function-type size-in-bits='64' id='type-id-527'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jcharArray' -->
      <parameter type-id='type-id-289'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'const jchar*' -->
      <parameter type-id='type-id-324'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jcharArray, jsize, jsize, jchar*) -->
    <function-type size-in-bits='64' id='type-id-528'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jcharArray' -->
      <parameter type-id='type-id-289'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'jchar*' -->
      <parameter type-id='type-id-354'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jclass, jfieldID, jboolean) -->
    <function-type size-in-bits='64' id='type-id-529'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- parameter of type 'typedef jboolean' -->
      <parameter type-id='type-id-275'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jclass, jfieldID, jbyte) -->
    <function-type size-in-bits='64' id='type-id-530'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- parameter of type 'typedef jbyte' -->
      <parameter type-id='type-id-269'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jclass, jfieldID, jchar) -->
    <function-type size-in-bits='64' id='type-id-531'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- parameter of type 'typedef jchar' -->
      <parameter type-id='type-id-279'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jclass, jfieldID, jdouble) -->
    <function-type size-in-bits='64' id='type-id-532'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- parameter of type 'typedef jdouble' -->
      <parameter type-id='type-id-283'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jclass, jfieldID, jfloat) -->
    <function-type size-in-bits='64' id='type-id-533'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- parameter of type 'typedef jfloat' -->
      <parameter type-id='type-id-282'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jclass, jfieldID, jint) -->
    <function-type size-in-bits='64' id='type-id-534'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- parameter of type 'typedef jint' -->
      <parameter type-id='type-id-263'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jclass, jfieldID, jlong) -->
    <function-type size-in-bits='64' id='type-id-535'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- parameter of type 'typedef jlong' -->
      <parameter type-id='type-id-281'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jclass, jfieldID, jobject) -->
    <function-type size-in-bits='64' id='type-id-536'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jclass, jfieldID, jshort) -->
    <function-type size-in-bits='64' id='type-id-537'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- parameter of type 'typedef jshort' -->
      <parameter type-id='type-id-280'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-538'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-539'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-540'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jdoubleArray, jdouble*, jint) -->
    <function-type size-in-bits='64' id='type-id-541'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jdoubleArray' -->
      <parameter type-id='type-id-294'/>
      <!-- parameter of type 'jdouble*' -->
      <parameter type-id='type-id-356'/>
      <!-- parameter of type 'typedef jint' -->
      <parameter type-id='type-id-263'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jdoubleArray, jsize, jsize, const jdouble*) -->
    <function-type size-in-bits='64' id='type-id-542'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jdoubleArray' -->
      <parameter type-id='type-id-294'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'const jdouble*' -->
      <parameter type-id='type-id-327'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jdoubleArray, jsize, jsize, jdouble*) -->
    <function-type size-in-bits='64' id='type-id-543'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jdoubleArray' -->
      <parameter type-id='type-id-294'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'jdouble*' -->
      <parameter type-id='type-id-356'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jfloatArray, jfloat*, jint) -->
    <function-type size-in-bits='64' id='type-id-544'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jfloatArray' -->
      <parameter type-id='type-id-293'/>
      <!-- parameter of type 'jfloat*' -->
      <parameter type-id='type-id-358'/>
      <!-- parameter of type 'typedef jint' -->
      <parameter type-id='type-id-263'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jfloatArray, jsize, jsize, const jfloat*) -->
    <function-type size-in-bits='64' id='type-id-545'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jfloatArray' -->
      <parameter type-id='type-id-293'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'const jfloat*' -->
      <parameter type-id='type-id-329'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jfloatArray, jsize, jsize, jfloat*) -->
    <function-type size-in-bits='64' id='type-id-546'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jfloatArray' -->
      <parameter type-id='type-id-293'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'jfloat*' -->
      <parameter type-id='type-id-358'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jintArray, jint*, jint) -->
    <function-type size-in-bits='64' id='type-id-547'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jintArray' -->
      <parameter type-id='type-id-291'/>
      <!-- parameter of type 'jint*' -->
      <parameter type-id='type-id-360'/>
      <!-- parameter of type 'typedef jint' -->
      <parameter type-id='type-id-263'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jintArray, jsize, jsize, const jint*) -->
    <function-type size-in-bits='64' id='type-id-548'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jintArray' -->
      <parameter type-id='type-id-291'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'const jint*' -->
      <parameter type-id='type-id-331'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jintArray, jsize, jsize, jint*) -->
    <function-type size-in-bits='64' id='type-id-549'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jintArray' -->
      <parameter type-id='type-id-291'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'jint*' -->
      <parameter type-id='type-id-360'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jlongArray, jlong*, jint) -->
    <function-type size-in-bits='64' id='type-id-550'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jlongArray' -->
      <parameter type-id='type-id-292'/>
      <!-- parameter of type 'jlong*' -->
      <parameter type-id='type-id-362'/>
      <!-- parameter of type 'typedef jint' -->
      <parameter type-id='type-id-263'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jlongArray, jsize, jsize, const jlong*) -->
    <function-type size-in-bits='64' id='type-id-551'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jlongArray' -->
      <parameter type-id='type-id-292'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'const jlong*' -->
      <parameter type-id='type-id-333'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jlongArray, jsize, jsize, jlong*) -->
    <function-type size-in-bits='64' id='type-id-552'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jlongArray' -->
      <parameter type-id='type-id-292'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'jlong*' -->
      <parameter type-id='type-id-362'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jobject) -->
    <function-type size-in-bits='64' id='type-id-553'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jobject, jclass, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-554'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jobject, jclass, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-555'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jobject, jclass, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-556'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jclass' -->
      <parameter type-id='type-id-267'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jobject, jfieldID, jboolean) -->
    <function-type size-in-bits='64' id='type-id-557'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- parameter of type 'typedef jboolean' -->
      <parameter type-id='type-id-275'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jobject, jfieldID, jbyte) -->
    <function-type size-in-bits='64' id='type-id-558'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- parameter of type 'typedef jbyte' -->
      <parameter type-id='type-id-269'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jobject, jfieldID, jchar) -->
    <function-type size-in-bits='64' id='type-id-559'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- parameter of type 'typedef jchar' -->
      <parameter type-id='type-id-279'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jobject, jfieldID, jdouble) -->
    <function-type size-in-bits='64' id='type-id-560'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- parameter of type 'typedef jdouble' -->
      <parameter type-id='type-id-283'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jobject, jfieldID, jfloat) -->
    <function-type size-in-bits='64' id='type-id-561'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- parameter of type 'typedef jfloat' -->
      <parameter type-id='type-id-282'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jobject, jfieldID, jint) -->
    <function-type size-in-bits='64' id='type-id-562'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- parameter of type 'typedef jint' -->
      <parameter type-id='type-id-263'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jobject, jfieldID, jlong) -->
    <function-type size-in-bits='64' id='type-id-563'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- parameter of type 'typedef jlong' -->
      <parameter type-id='type-id-281'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jobject, jfieldID, jobject) -->
    <function-type size-in-bits='64' id='type-id-564'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jobject, jfieldID, jshort) -->
    <function-type size-in-bits='64' id='type-id-565'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jfieldID' -->
      <parameter type-id='type-id-274'/>
      <!-- parameter of type 'typedef jshort' -->
      <parameter type-id='type-id-280'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jobject, jmethodID, __va_list_tag*) -->
    <function-type size-in-bits='64' id='type-id-566'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type '__va_list_tag*' -->
      <parameter type-id='type-id-310'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jobject, jmethodID, const jvalue*) -->
    <function-type size-in-bits='64' id='type-id-567'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <!-- parameter of type 'const jvalue*' -->
      <parameter type-id='type-id-337'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jobject, jmethodID, ...) -->
    <function-type size-in-bits='64' id='type-id-568'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'typedef jmethodID' -->
      <parameter type-id='type-id-272'/>
      <parameter is-variadic='yes'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jobjectArray, jsize, jobject) -->
    <function-type size-in-bits='64' id='type-id-569'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobjectArray' -->
      <parameter type-id='type-id-286'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jshortArray, jshort*, jint) -->
    <function-type size-in-bits='64' id='type-id-570'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jshortArray' -->
      <parameter type-id='type-id-290'/>
      <!-- parameter of type 'jshort*' -->
      <parameter type-id='type-id-364'/>
      <!-- parameter of type 'typedef jint' -->
      <parameter type-id='type-id-263'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jshortArray, jsize, jsize, const jshort*) -->
    <function-type size-in-bits='64' id='type-id-571'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jshortArray' -->
      <parameter type-id='type-id-290'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'const jshort*' -->
      <parameter type-id='type-id-335'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jshortArray, jsize, jsize, jshort*) -->
    <function-type size-in-bits='64' id='type-id-572'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jshortArray' -->
      <parameter type-id='type-id-290'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'jshort*' -->
      <parameter type-id='type-id-364'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jstring, const char*) -->
    <function-type size-in-bits='64' id='type-id-573'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jstring' -->
      <parameter type-id='type-id-284'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-27'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jstring, const jchar*) -->
    <function-type size-in-bits='64' id='type-id-574'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jstring' -->
      <parameter type-id='type-id-284'/>
      <!-- parameter of type 'const jchar*' -->
      <parameter type-id='type-id-324'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jstring, jsize, jsize, char*) -->
    <function-type size-in-bits='64' id='type-id-575'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jstring' -->
      <parameter type-id='type-id-284'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-297'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jstring, jsize, jsize, jchar*) -->
    <function-type size-in-bits='64' id='type-id-576'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jstring' -->
      <parameter type-id='type-id-284'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'typedef jsize' -->
      <parameter type-id='type-id-270'/>
      <!-- parameter of type 'jchar*' -->
      <parameter type-id='type-id-354'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void (JNIEnv*, jweak) -->
    <function-type size-in-bits='64' id='type-id-577'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jweak' -->
      <parameter type-id='type-id-304'/>
      <!-- void -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void* (JNIEnv*, jarray, jboolean*) -->
    <function-type size-in-bits='64' id='type-id-578'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jarray' -->
      <parameter type-id='type-id-285'/>
      <!-- parameter of type 'jboolean*' -->
      <parameter type-id='type-id-350'/>
      <!-- void* -->
      <return type-id='type-id-4'/>
    </function-type>
    <!-- void* (JNIEnv*, jobject) -->
    <function-type size-in-bits='64' id='type-id-579'>
      <!-- parameter of type 'JNIEnv*' -->
      <parameter type-id='type-id-307'/>
      <!-- parameter of type 'typedef jobject' -->
      <parameter type-id='type-id-266'/>
      <!-- void* -->
      <return type-id='type-id-4'/>
    </function-type>
    <!-- void* (void*) -->
    <function-type size-in-bits='64' id='type-id-580'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-4'/>
      <!-- void* -->
      <return type-id='type-id-4'/>
    </function-type>
  </abi-instr>
</abi-corpus>
